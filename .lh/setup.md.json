{
    "sourceFile": "setup.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752729433149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752729433149,
            "name": "Commit-0",
            "content": "# Dinero Sweeps - Complete Setup Guide\r\n\r\nThis guide will help you set up both the backend and frontend for the Dinero Sweeps gaming platform.\r\n\r\n## Prerequisites\r\n\r\n- Node.js (v16 or higher)\r\n- MongoDB (local or cloud)\r\n- npm or yarn\r\n- Git\r\n\r\n## Backend Setup\r\n\r\n### 1. Navigate to Backend Directory\r\n```bash\r\ncd backend\r\n```\r\n\r\n### 2. Install Dependencies\r\n```bash\r\nnpm install\r\n```\r\n\r\n### 3. Environment Configuration\r\n```bash\r\ncp env.example .env\r\n```\r\n\r\nEdit the `.env` file with your configuration:\r\n\r\n```env\r\n# Server Configuration\r\nPORT=8004\r\nNODE_ENV=development\r\n\r\n# MongoDB Configuration\r\nMONGODB_URI=mongodb://localhost:27017/dinero_sweeps\r\n\r\n# JWT Configuration\r\nJWT_SECRET=your-super-secret-jwt-key-change-this-in-production\r\nJWT_EXPIRES_IN=7d\r\nJWT_REFRESH_SECRET=your-refresh-secret-key\r\nJWT_REFRESH_EXPIRES_IN=30d\r\n\r\n# OAuth Configuration (Optional for development)\r\nGOOGLE_CLIENT_ID=your-google-client-id\r\nGOOGLE_CLIENT_SECRET=your-google-client-secret\r\nFACEBOOK_APP_ID=your-facebook-app-id\r\nFACEBOOK_APP_SECRET=your-facebook-app-secret\r\n\r\n# Frontend URLs\r\nFRONTEND_URL=http://localhost:5173\r\n\r\n# reCAPTCHA Configuration\r\nRECAPTCHA_SECRET_KEY=your-recaptcha-secret-key\r\nRECAPTCHA_SITE_KEY=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\r\n\r\n# Session Configuration\r\nSESSION_SECRET=your-session-secret-key\r\n```\r\n\r\n### 4. Start MongoDB\r\nMake sure MongoDB is running on your system or use a cloud service like MongoDB Atlas.\r\n\r\n### 5. Start the Backend Server\r\n```bash\r\n# Development mode\r\nnpm run dev\r\n\r\n# Production mode\r\nnpm start\r\n```\r\n\r\nThe backend will be available at `http://localhost:8004`\r\n\r\n## Frontend Setup\r\n\r\n### 1. Navigate to Root Directory\r\n```bash\r\ncd ..  # If you're in the backend directory\r\n```\r\n\r\n### 2. Install Dependencies\r\n```bash\r\nnpm install\r\n```\r\n\r\n### 3. Environment Configuration\r\nCreate a `.env` file in the root directory:\r\n\r\n```env\r\nVITE_API_BASE_URL=http://localhost:8004/api/v1\r\nVITE_RECAPTCHA_SITE_KEY=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\r\n```\r\n\r\n### 4. Start the Frontend Development Server\r\n```bash\r\nnpm run dev\r\n```\r\n\r\nThe frontend will be available at `http://localhost:5173`\r\n\r\n## Project Structure\r\n\r\n```\r\ndinero-sweeps/\r\n├── backend/                 # Backend API\r\n│   ├── config/             # Configuration files\r\n│   ├── controllers/        # Route controllers\r\n│   ├── middleware/         # Custom middleware\r\n│   ├── models/            # Mongoose models\r\n│   ├── routes/            # API routes\r\n│   ├── server.js          # Main server file\r\n│   └── package.json\r\n├── src/                   # Frontend React app\r\n│   ├── components/        # React components\r\n│   ├── pages/            # Page components\r\n│   ├── assets/           # Static assets\r\n│   └── index.css         # Tailwind CSS\r\n├── package.json          # Frontend dependencies\r\n├── tailwind.config.js    # Tailwind configuration\r\n└── vite.config.js        # Vite configuration\r\n```\r\n\r\n## Features Implemented\r\n\r\n### Backend Features\r\n- ✅ Express.js server with proper middleware\r\n- ✅ MongoDB integration with Mongoose\r\n- ✅ JWT authentication\r\n- ✅ Google & Facebook OAuth\r\n- ✅ Input validation with express-validator\r\n- ✅ Rate limiting and security headers\r\n- ✅ Comprehensive error handling\r\n- ✅ Winston logging\r\n- ✅ User model with gaming fields\r\n- ✅ Authentication routes (login, register, OAuth)\r\n- ✅ User management routes\r\n- ✅ Game routes (placeholder)\r\n- ✅ Wallet routes (placeholder)\r\n\r\n### Frontend Features\r\n- ✅ React with Vite\r\n- ✅ Tailwind CSS styling\r\n- ✅ Modern UI components\r\n- ✅ Form validation\r\n- ✅ reCAPTCHA integration\r\n- ✅ OAuth buttons\r\n- ✅ Responsive design\r\n- ✅ Loading states\r\n- ✅ Error handling\r\n- ✅ Toast notifications\r\n\r\n## API Endpoints\r\n\r\n### Authentication\r\n- `POST /api/v1/auth/register` - User registration\r\n- `POST /api/v1/auth/login` - User login\r\n- `POST /api/v1/auth/logout` - User logout\r\n- `GET /api/v1/auth/google` - Google OAuth\r\n- `GET /api/v1/auth/facebook` - Facebook OAuth\r\n\r\n### User Management\r\n- `GET /api/v1/user/profile` - Get user profile\r\n- `PUT /api/v1/user/profile` - Update profile\r\n- `GET /api/v1/user/stats` - Get user statistics\r\n\r\n### Gaming\r\n- `GET /api/v1/game` - Get all games\r\n- `POST /api/v1/game/bet` - Place bet\r\n\r\n### Wallet\r\n- `GET /api/v1/wallet/balance` - Get balance\r\n- `POST /api/v1/wallet/deposit` - Create deposit\r\n- `POST /api/v1/wallet/withdrawal` - Create withdrawal\r\n\r\n## Development Notes\r\n\r\n### Backend\r\n- The backend uses ES modules (import/export)\r\n- MongoDB connection is configured with proper error handling\r\n- JWT tokens are used for authentication\r\n- OAuth is implemented with Passport.js\r\n- All routes are validated and secured\r\n\r\n### Frontend\r\n- Uses Tailwind CSS for styling\r\n- Lucide React for icons\r\n- React Toastify for notifications\r\n- Form validation with custom logic\r\n- Responsive design for mobile and desktop\r\n\r\n## Next Steps\r\n\r\n1. **Complete Game Integration**: Implement actual game logic\r\n2. **Payment Processing**: Add real payment gateways\r\n3. **Email Service**: Implement email verification and notifications\r\n4. **Admin Panel**: Create admin dashboard\r\n5. **Real-time Features**: Add WebSocket for live updates\r\n6. **Testing**: Add unit and integration tests\r\n7. **Deployment**: Set up production deployment\r\n\r\n## Troubleshooting\r\n\r\n### Common Issues\r\n\r\n1. **MongoDB Connection Error**\r\n   - Ensure MongoDB is running\r\n   - Check connection string in `.env`\r\n   - Verify network access\r\n\r\n2. **CORS Errors**\r\n   - Check frontend URL in backend CORS configuration\r\n   - Ensure both servers are running\r\n\r\n3. **OAuth Errors**\r\n   - Verify OAuth credentials in `.env`\r\n   - Check callback URLs in OAuth provider settings\r\n\r\n4. **Build Errors**\r\n   - Clear node_modules and reinstall\r\n   - Check Node.js version compatibility\r\n\r\n## Support\r\n\r\nFor issues or questions, please check the documentation or create an issue in the repository. "
        }
    ]
}