{
    "sourceFile": "src/components/Chat.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1752752145565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752752723703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,19 +2,47 @@\n import { io } from 'socket.io-client';\r\n \r\n const socket = io('http://localhost:8004'); // Update if backend URL changes\r\n \r\n+const LOCAL_STORAGE_KEY = 'chat_messages';\r\n+\r\n const Chat = () => {\r\n   const [messages, setMessages] = useState([]);\r\n   const [input, setInput] = useState('');\r\n   const messagesEndRef = useRef(null);\r\n \r\n+  // Load messages from localStorage on mount\r\n   useEffect(() => {\r\n-    socket.on('chat_history', (msgs) => setMessages(msgs));\r\n-    socket.on('receive_message', (msg) => setMessages((prev) => [...prev, msg]));\r\n+    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n+    if (stored) {\r\n+      setMessages(JSON.parse(stored));\r\n+    }\r\n+  }, []);\r\n+\r\n+  // Listen for server messages and merge with localStorage\r\n+  useEffect(() => {\r\n+    const handleHistory = (msgs) => {\r\n+      // Merge server and local messages, avoiding duplicates\r\n+      setMessages((prev) => {\r\n+        const all = [...prev, ...msgs];\r\n+        // Remove duplicates by stringifying\r\n+        const unique = Array.from(new Set(all.map(m => JSON.stringify(m)))).map(s => JSON.parse(s));\r\n+        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(unique));\r\n+        return unique;\r\n+      });\r\n+    };\r\n+    const handleReceive = (msg) => {\r\n+      setMessages((prev) => {\r\n+        const all = [...prev, msg];\r\n+        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(all));\r\n+        return all;\r\n+      });\r\n+    };\r\n+    socket.on('chat_history', handleHistory);\r\n+    socket.on('receive_message', handleReceive);\r\n     return () => {\r\n-      socket.off('chat_history');\r\n-      socket.off('receive_message');\r\n+      socket.off('chat_history', handleHistory);\r\n+      socket.off('receive_message', handleReceive);\r\n     };\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1752752830428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,10 @@\n \r\n   // Listen for server messages and merge with localStorage\r\n   useEffect(() => {\r\n     const handleHistory = (msgs) => {\r\n-      // Merge server and local messages, avoiding duplicates\r\n       setMessages((prev) => {\r\n         const all = [...prev, ...msgs];\r\n-        // Remove duplicates by stringifying\r\n         const unique = Array.from(new Set(all.map(m => JSON.stringify(m)))).map(s => JSON.parse(s));\r\n         localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(unique));\r\n         return unique;\r\n       });\r\n@@ -57,9 +55,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4\">\r\n+    <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4 max-w-sm w-full mx-auto\">\r\n       <div className=\"flex-1 overflow-y-auto space-y-4\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n"
                },
                {
                    "date": 1752753000581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,20 @@\n import React, { useEffect, useRef, useState } from 'react';\r\n import { io } from 'socket.io-client';\r\n \r\n-const socket = io('http://localhost:8004'); // Update if backend URL changes\r\n-\r\n+const socket = io('http://localhost:8004');\r\n const LOCAL_STORAGE_KEY = 'chat_messages';\r\n \r\n const Chat = () => {\r\n   const [messages, setMessages] = useState([]);\r\n   const [input, setInput] = useState('');\r\n   const messagesEndRef = useRef(null);\r\n \r\n-  // Load messages from localStorage on mount\r\n   useEffect(() => {\r\n     const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n-    if (stored) {\r\n-      setMessages(JSON.parse(stored));\r\n-    }\r\n+    if (stored) setMessages(JSON.parse(stored));\r\n   }, []);\r\n \r\n-  // Listen for server messages and merge with localStorage\r\n   useEffect(() => {\r\n     const handleHistory = (msgs) => {\r\n       setMessages((prev) => {\r\n         const all = [...prev, ...msgs];\r\n@@ -55,36 +50,39 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4 max-w-sm w-full mx-auto\">\r\n-      <div className=\"flex-1 overflow-y-auto space-y-4\">\r\n+    <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+      <div className=\"flex-1 overflow-y-auto\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n             className={\r\n               msg.offensive\r\n-                ? 'bg-yellow-500/10 border border-yellow-400 text-yellow-300 font-bold rounded-lg p-4 text-center'\r\n-                : 'bg-black/80 text-white rounded-lg p-4'\r\n+                ? 'border-2 border-yellow-400 bg-yellow-900/20 text-yellow-300 font-bold rounded-xl px-6 py-4 mb-3 text-lg text-center'\r\n+                : 'bg-[#18111A] text-white rounded-xl px-6 py-4 mb-3 text-lg font-normal'\r\n             }\r\n           >\r\n             {msg.text}\r\n           </div>\r\n         ))}\r\n         <div ref={messagesEndRef} />\r\n       </div>\r\n-      <form onSubmit={sendMessage} className=\"mt-4 flex\">\r\n+      <form onSubmit={sendMessage} className=\"flex items-center border-t border-pink-900 mt-6 pt-4\">\r\n         <input\r\n-          className=\"flex-1 p-3 rounded-l-lg bg-black/80 text-white outline-none\"\r\n+          className=\"w-full bg-transparent text-white placeholder:text-gray-300 px-0 py-4 border-none outline-none text-lg\"\r\n           placeholder=\"Type your message...\"\r\n           value={input}\r\n           onChange={e => setInput(e.target.value)}\r\n         />\r\n-        <button className=\"bg-pink-600 px-6 rounded-r-lg text-white font-bold\" type=\"submit\">\r\n+        <button\r\n+          className=\"ml-2 font-bold text-black text-xl bg-transparent hover:underline focus:outline-none\"\r\n\\ No newline at end of file\n+          type=\"submit\"\r\n+        >\r\n           Send\r\n         </button>\r\n       </form>\r\n     </div>\r\n   );\r\n };\r\n \r\n-export default Chat; \n+export default Chat;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752753156948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n   };\r\n \r\n   return (\r\n     <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n-      <div className=\"flex-1 overflow-y-auto\">\r\n+      <div className=\"flex-1 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n             className={\r\n"
                },
                {
                    "date": 1752753898345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,25 @@\n import React, { useEffect, useRef, useState } from 'react';\r\n import { io } from 'socket.io-client';\r\n \r\n-const socket = io('http://localhost:8004');\r\n+const socket = io('http://localhost:8004'); // Update if backend URL changes\r\n+\r\n const LOCAL_STORAGE_KEY = 'chat_messages';\r\n \r\n const Chat = () => {\r\n   const [messages, setMessages] = useState([]);\r\n   const [input, setInput] = useState('');\r\n   const messagesEndRef = useRef(null);\r\n \r\n+  // Load messages from localStorage on mount\r\n   useEffect(() => {\r\n     const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n-    if (stored) setMessages(JSON.parse(stored));\r\n+    if (stored) {\r\n+      setMessages(JSON.parse(stored));\r\n+    }\r\n   }, []);\r\n \r\n+  // Listen for server messages and merge with localStorage\r\n   useEffect(() => {\r\n     const handleHistory = (msgs) => {\r\n       setMessages((prev) => {\r\n         const all = [...prev, ...msgs];\r\n@@ -50,10 +55,10 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n-      <div className=\"flex-1 overflow-y-auto hide-scrollbar\">\r\n+    <div className=\"flex flex-col h-full min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+      <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n             className={\r\n"
                },
                {
                    "date": 1752754103391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-full min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+    <div className=\"flex flex-col h-[600px] md:h-[600px] sm:h-[400px] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n       <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n"
                },
                {
                    "date": 1752754135922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-[600px] md:h-[600px] sm:h-[400px] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+    <div className=\"flex flex-col h-[600px] md:h-[700px] sm:h-[400px] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n       <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n"
                },
                {
                    "date": 1752754225362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-[600px] md:h-[700px] sm:h-[400px] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[400px] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n       <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n"
                },
                {
                    "date": 1752754270135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[400px] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[100] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n       <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n"
                },
                {
                    "date": 1752758042998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n   const [messages, setMessages] = useState([]);\r\n   const [input, setInput] = useState('');\r\n   const messagesEndRef = useRef(null);\r\n \r\n-  // Load messages from localStorage on mount\r\n   useEffect(() => {\r\n     const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n     if (stored) {\r\n       setMessages(JSON.parse(stored));\r\n@@ -55,9 +54,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[100] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n+    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[100vh] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n       <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n         {messages.map((msg, idx) => (\r\n           <div\r\n             key={idx}\r\n"
                },
                {
                    "date": 1752758055443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useRef, useState } from 'react';\r\n import { io } from 'socket.io-client';\r\n \r\n-const socket = io('http://localhost:8004'); // Update if backend URL changes\r\n+const socket = io('http://localhost:8004'); \r\n \r\n const LOCAL_STORAGE_KEY = 'chat_messages';\r\n \r\n const Chat = () => {\r\n@@ -16,9 +16,8 @@\n       setMessages(JSON.parse(stored));\r\n     }\r\n   }, []);\r\n \r\n-  // Listen for server messages and merge with localStorage\r\n   useEffect(() => {\r\n     const handleHistory = (msgs) => {\r\n       setMessages((prev) => {\r\n         const all = [...prev, ...msgs];\r\n"
                },
                {
                    "date": 1752758545088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,91 +1,93 @@\n-import React, { useEffect, useRef, useState } from 'react';\r\n-import { io } from 'socket.io-client';\r\n-\r\n-const socket = io('http://localhost:8004'); \r\n-\r\n-const LOCAL_STORAGE_KEY = 'chat_messages';\r\n-\r\n-const Chat = () => {\r\n-  const [messages, setMessages] = useState([]);\r\n-  const [input, setInput] = useState('');\r\n-  const messagesEndRef = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n-    if (stored) {\r\n-      setMessages(JSON.parse(stored));\r\n-    }\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    const handleHistory = (msgs) => {\r\n-      setMessages((prev) => {\r\n-        const all = [...prev, ...msgs];\r\n-        const unique = Array.from(new Set(all.map(m => JSON.stringify(m)))).map(s => JSON.parse(s));\r\n-        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(unique));\r\n-        return unique;\r\n-      });\r\n-    };\r\n-    const handleReceive = (msg) => {\r\n-      setMessages((prev) => {\r\n-        const all = [...prev, msg];\r\n-        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(all));\r\n-        return all;\r\n-      });\r\n-    };\r\n-    socket.on('chat_history', handleHistory);\r\n-    socket.on('receive_message', handleReceive);\r\n-    return () => {\r\n-      socket.off('chat_history', handleHistory);\r\n-      socket.off('receive_message', handleReceive);\r\n-    };\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n-  }, [messages]);\r\n-\r\n-  const sendMessage = (e) => {\r\n-    e.preventDefault();\r\n-    if (input.trim()) {\r\n-      socket.emit('send_message', { text: input });\r\n-      setInput('');\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[100vh] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\r\n-      <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\r\n-        {messages.map((msg, idx) => (\r\n-          <div\r\n-            key={idx}\r\n-            className={\r\n-              msg.offensive\r\n-                ? 'border-2 border-yellow-400 bg-yellow-900/20 text-yellow-300 font-bold rounded-xl px-6 py-4 mb-3 text-lg text-center'\r\n-                : 'bg-[#18111A] text-white rounded-xl px-6 py-4 mb-3 text-lg font-normal'\r\n-            }\r\n-          >\r\n-            {msg.text}\r\n-          </div>\r\n-        ))}\r\n-        <div ref={messagesEndRef} />\r\n-      </div>\r\n-      <form onSubmit={sendMessage} className=\"flex items-center border-t border-pink-900 mt-6 pt-4\">\r\n-        <input\r\n-          className=\"w-full bg-transparent text-white placeholder:text-gray-300 px-0 py-4 border-none outline-none text-lg\"\r\n-          placeholder=\"Type your message...\"\r\n-          value={input}\r\n-          onChange={e => setInput(e.target.value)}\r\n-        />\r\n-        <button\r\n-          className=\"ml-2 font-bold text-black text-xl bg-transparent hover:underline focus:outline-none\"\r\n-          type=\"submit\"\r\n-        >\r\n-          Send\r\n-        </button>\r\n-      </form>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n+import React, { useEffect, useRef, useState } from 'react';\n+import { io } from 'socket.io-client';\n+\n+const socket = io('http://localhost:8004'); // Update if backend URL changes\n+\n+const LOCAL_STORAGE_KEY = 'chat_messages';\n+\n+const Chat = () => {\n+  const [messages, setMessages] = useState([]);\n+  const [input, setInput] = useState('');\n+  const messagesEndRef = useRef(null);\n+\n+  // Load messages from localStorage on mount\n+  useEffect(() => {\n+    const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\n+    if (stored) {\n+      setMessages(JSON.parse(stored));\n+    }\n+  }, []);\n+\n+  // Listen for server messages and merge with localStorage\n+  useEffect(() => {\n+    const handleHistory = (msgs) => {\n+      setMessages((prev) => {\n+        const all = [...prev, ...msgs];\n+        const unique = Array.from(new Set(all.map(m => JSON.stringify(m)))).map(s => JSON.parse(s));\n+        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(unique));\n+        return unique;\n+      });\n+    };\n+    const handleReceive = (msg) => {\n+      setMessages((prev) => {\n+        const all = [...prev, msg];\n+        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(all));\n+        return all;\n+      });\n+    };\n+    socket.on('chat_history', handleHistory);\n+    socket.on('receive_message', handleReceive);\n+    return () => {\n+      socket.off('chat_history', handleHistory);\n+      socket.off('receive_message', handleReceive);\n+    };\n+  }, []);\n+\n+  useEffect(() => {\n+    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n+  }, [messages]);\n+\n+  const sendMessage = (e) => {\n+    e.preventDefault();\n+    if (input.trim()) {\n+      socket.emit('send_message', { text: input });\n+      setInput('');\n+    }\n+  };\n+\n+  return (\n+    <div className=\"flex flex-col h-[600px] md:h-[100vh] sm:h-[100vh] min-h-0 bg-gradient-to-b from-black to-pink-900 p-4 font-sans\">\n+      <div className=\"flex-1 min-h-0 overflow-y-auto hide-scrollbar\">\n+        {messages.map((msg, idx) => (\n+          <div\n+            key={idx}\n+            className={\n+              msg.offensive\n+                ? 'border-2 border-yellow-400 bg-yellow-900/20 text-yellow-300 font-bold rounded-xl px-6 py-4 mb-3 text-lg text-center'\n+                : 'bg-[#18111A] text-white rounded-xl px-6 py-4 mb-3 text-lg font-normal'\n+            }\n+          >\n+            {msg.text}\n+          </div>\n+        ))}\n+        <div ref={messagesEndRef} />\n+      </div>\n+      <form onSubmit={sendMessage} className=\"flex items-center border-t border-pink-900 mt-6 pt-4\">\n+        <input\n+          className=\"w-full bg-transparent text-white placeholder:text-gray-300 px-0 py-4 border-none outline-none text-lg\"\n+          placeholder=\"Type your message...\"\n+          value={input}\n+          onChange={e => setInput(e.target.value)}\n+        />\n+        <button\n+          className=\"ml-2 font-bold text-black text-xl bg-transparent hover:underline focus:outline-none\"\n+          type=\"submit\"\n+        >\n+          Send\n+        </button>\n+      </form>\n+    </div>\n+  );\n+};\n+\n export default Chat;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752759256347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useRef, useState } from 'react';\n import { io } from 'socket.io-client';\n \n-const socket = io('http://localhost:8004'); // Update if backend URL changes\n+const socket = io('http://localhost:8004'); \n \n const LOCAL_STORAGE_KEY = 'chat_messages';\n \n const Chat = () => {\n"
                },
                {
                    "date": 1752759262421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,17 +9,16 @@\n   const [messages, setMessages] = useState([]);\n   const [input, setInput] = useState('');\n   const messagesEndRef = useRef(null);\n \n-  // Load messages from localStorage on mount\n   useEffect(() => {\n     const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\n     if (stored) {\n       setMessages(JSON.parse(stored));\n     }\n   }, []);\n \n-  // Listen for server messages and merge with localStorage\n+\n   useEffect(() => {\n     const handleHistory = (msgs) => {\n       setMessages((prev) => {\n         const all = [...prev, ...msgs];\n"
                }
            ],
            "date": 1752752145565,
            "name": "Commit-0",
            "content": "import React, { useEffect, useRef, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8004'); // Update if backend URL changes\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('chat_history', (msgs) => setMessages(msgs));\r\n    socket.on('receive_message', (msg) => setMessages((prev) => [...prev, msg]));\r\n    return () => {\r\n      socket.off('chat_history');\r\n      socket.off('receive_message');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim()) {\r\n      socket.emit('send_message', { text: input });\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full bg-gradient-to-b from-black to-pink-900 p-4\">\r\n      <div className=\"flex-1 overflow-y-auto space-y-4\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={\r\n              msg.offensive\r\n                ? 'bg-yellow-500/10 border border-yellow-400 text-yellow-300 font-bold rounded-lg p-4 text-center'\r\n                : 'bg-black/80 text-white rounded-lg p-4'\r\n            }\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={sendMessage} className=\"mt-4 flex\">\r\n        <input\r\n          className=\"flex-1 p-3 rounded-l-lg bg-black/80 text-white outline-none\"\r\n          placeholder=\"Type your message...\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n        />\r\n        <button className=\"bg-pink-600 px-6 rounded-r-lg text-white font-bold\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat; "
        }
    ]
}