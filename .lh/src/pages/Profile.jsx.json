{
    "sourceFile": "src/pages/Profile.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1753094645690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753095051828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,14 @@\n         setUser(res.data);\r\n         setForm(res.data);\r\n         setCommPrefs(res.data.communicationPreferences || { email: true, sms: false, call: false });\r\n         setSelfExclusion(res.data.selfExclusion || { isActive: false, reason: '', type: 'temporary', startDate: '', endDate: '' });\r\n+      })\r\n+      .catch(err => {\r\n+        if (err.response && err.response.status === 401) {\r\n+          // Redirect to login or show a message\r\n+          window.location.href = '/login';\r\n+        }\r\n       });\r\n   }, []);\r\n \r\n   const handleEdit = () => setEditMode(true);\r\n"
                },
                {
                    "date": 1753099812624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,148 @@\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n+import React, { useState, useEffect } from \"react\";\r\n+import axios from \"axios\";\r\n \r\n-const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8004/api/v1';\r\n+const API_BASE_URL =\r\n+  import.meta.env.VITE_API_BASE_URL || \"http://localhost:8004/api/v1\";\r\n \r\n const Profile = () => {\r\n   const [user, setUser] = useState(null);\r\n   const [editMode, setEditMode] = useState(false);\r\n   const [form, setForm] = useState({});\r\n   const [avatarFile, setAvatarFile] = useState(null);\r\n   const [avatarPreview, setAvatarPreview] = useState(null);\r\n-  const [commPrefs, setCommPrefs] = useState({ email: true, sms: false, call: false });\r\n+  const [commPrefs, setCommPrefs] = useState({\r\n+    email: true,\r\n+    sms: false,\r\n+    call: false,\r\n+  });\r\n   const [verifFile, setVerifFile] = useState(null);\r\n-  const [verifType, setVerifType] = useState('id');\r\n-  const [passwords, setPasswords] = useState({ oldPassword: '', newPassword: '' });\r\n-  const [selfExclusion, setSelfExclusion] = useState({ isActive: false, reason: '', type: 'temporary', startDate: '', endDate: '' });\r\n-  const [message, setMessage] = useState('');\r\n+  const [verifType, setVerifType] = useState(\"id\");\r\n+  const [passwords, setPasswords] = useState({\r\n+    oldPassword: \"\",\r\n+    newPassword: \"\",\r\n+  });\r\n+  const [selfExclusion, setSelfExclusion] = useState({\r\n+    isActive: false,\r\n+    reason: \"\",\r\n+    type: \"temporary\",\r\n+    startDate: \"\",\r\n+    endDate: \"\",\r\n+  });\r\n+  const [message, setMessage] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n-    axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true })\r\n-      .then(res => {\r\n+    axios\r\n+      .get(`${API_BASE_URL}/users/me`, { withCredentials: true })\r\n+      .then((res) => {\r\n         setUser(res.data);\r\n         setForm(res.data);\r\n-        setCommPrefs(res.data.communicationPreferences || { email: true, sms: false, call: false });\r\n-        setSelfExclusion(res.data.selfExclusion || { isActive: false, reason: '', type: 'temporary', startDate: '', endDate: '' });\r\n+        setCommPrefs(\r\n+          res.data.communicationPreferences || {\r\n+            email: true,\r\n+            sms: false,\r\n+            call: false,\r\n+          }\r\n+        );\r\n+        setSelfExclusion(\r\n+          res.data.selfExclusion || {\r\n+            isActive: false,\r\n+            reason: \"\",\r\n+            type: \"temporary\",\r\n+            startDate: \"\",\r\n+            endDate: \"\",\r\n+          }\r\n+        );\r\n       })\r\n-      .catch(err => {\r\n+      .catch((err) => {\r\n         if (err.response && err.response.status === 401) {\r\n           // Redirect to login or show a message\r\n-          window.location.href = '/login';\r\n+          window.location.href = \"/login\";\r\n         }\r\n       });\r\n   }, []);\r\n \r\n   const handleEdit = () => setEditMode(true);\r\n-  const handleCancel = () => { setEditMode(false); setForm(user); };\r\n-  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n-  const handleCommPrefChange = e => setCommPrefs({ ...commPrefs, [e.target.name]: e.target.checked });\r\n+  const handleCancel = () => {\r\n+    setEditMode(false);\r\n+    setForm(user);\r\n+  };\r\n+  const handleChange = (e) =>\r\n+    setForm({ ...form, [e.target.name]: e.target.value });\r\n+  const handleCommPrefChange = (e) =>\r\n+    setCommPrefs({ ...commPrefs, [e.target.name]: e.target.checked });\r\n \r\n   const handleSave = async () => {\r\n-    await axios.patch(`${API_BASE_URL}/users/me`, { ...form, communicationPreferences: commPrefs }, { withCredentials: true });\r\n+    await axios.patch(\r\n+      `${API_BASE_URL}/users/me`,\r\n+      { ...form, communicationPreferences: commPrefs },\r\n+      { withCredentials: true }\r\n+    );\r\n     setEditMode(false);\r\n-    setMessage('Profile updated!');\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n+    setMessage(\"Profile updated!\");\r\n+    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n+      withCredentials: true,\r\n+    });\r\n     setUser(res.data);\r\n   };\r\n \r\n-  const handleAvatarChange = e => {\r\n+  const handleAvatarChange = (e) => {\r\n     setAvatarFile(e.target.files[0]);\r\n     setAvatarPreview(URL.createObjectURL(e.target.files[0]));\r\n   };\r\n   const handleAvatarUpload = async () => {\r\n     if (!avatarFile) return;\r\n     const formData = new FormData();\r\n-    formData.append('avatar', avatarFile);\r\n-    await axios.post(`${API_BASE_URL}/users/me/avatar`, formData, { withCredentials: true });\r\n-    setMessage('Avatar updated!');\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n+    formData.append(\"avatar\", avatarFile);\r\n+    await axios.post(`${API_BASE_URL}/users/me/avatar`, formData, {\r\n+      withCredentials: true,\r\n+    });\r\n+    setMessage(\"Avatar updated!\");\r\n+    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n+      withCredentials: true,\r\n+    });\r\n     setUser(res.data);\r\n     setAvatarFile(null);\r\n     setAvatarPreview(null);\r\n   };\r\n \r\n-  const handleVerifFileChange = e => setVerifFile(e.target.files[0]);\r\n+  const handleVerifFileChange = (e) => setVerifFile(e.target.files[0]);\r\n   const handleVerifUpload = async () => {\r\n     if (!verifFile) return;\r\n     const formData = new FormData();\r\n-    formData.append('document', verifFile);\r\n-    formData.append('type', verifType);\r\n-    await axios.post(`${API_BASE_URL}/users/me/verify`, formData, { withCredentials: true });\r\n-    setMessage('Verification document uploaded!');\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n+    formData.append(\"document\", verifFile);\r\n+    formData.append(\"type\", verifType);\r\n+    await axios.post(`${API_BASE_URL}/users/me/verify`, formData, {\r\n+      withCredentials: true,\r\n+    });\r\n+    setMessage(\"Verification document uploaded!\");\r\n+    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n+      withCredentials: true,\r\n+    });\r\n     setUser(res.data);\r\n     setVerifFile(null);\r\n   };\r\n \r\n-  const handlePasswordChange = e => setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n+  const handlePasswordChange = (e) =>\r\n+    setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n   const handlePasswordSubmit = async () => {\r\n-    await axios.post(`${API_BASE_URL}/users/me/change-password`, passwords, { withCredentials: true });\r\n-    setMessage('Password changed!');\r\n-    setPasswords({ oldPassword: '', newPassword: '' });\r\n+    await axios.post(`${API_BASE_URL}/users/me/change-password`, passwords, {\r\n+      withCredentials: true,\r\n+    });\r\n+    setMessage(\"Password changed!\");\r\n+    setPasswords({ oldPassword: \"\", newPassword: \"\" });\r\n   };\r\n \r\n-  const handleSelfExclusionChange = e => setSelfExclusion({ ...selfExclusion, [e.target.name]: e.target.value });\r\n+  const handleSelfExclusionChange = (e) =>\r\n+    setSelfExclusion({ ...selfExclusion, [e.target.name]: e.target.value });\r\n   const handleSelfExclusionSubmit = async () => {\r\n-    await axios.post(`${API_BASE_URL}/users/me/self-exclusion`, selfExclusion, { withCredentials: true });\r\n-    setMessage('Self-exclusion updated!');\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n+    await axios.post(`${API_BASE_URL}/users/me/self-exclusion`, selfExclusion, {\r\n+      withCredentials: true,\r\n+    });\r\n+    setMessage(\"Self-exclusion updated!\");\r\n+    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n+      withCredentials: true,\r\n+    });\r\n     setUser(res.data);\r\n   };\r\n \r\n   if (!user) return <div className=\"text-white p-8\">Loading...</div>;\r\n@@ -95,20 +151,44 @@\n     <div className=\"max-w-2xl mx-auto p-6 bg-gray-900 rounded-lg shadow text-white mt-8\">\r\n       <h2 className=\"text-2xl font-bold mb-4\">Profile</h2>\r\n       {message && <div className=\"mb-4 text-green-400\">{message}</div>}\r\n       <div className=\"flex items-center gap-4 mb-4\">\r\n-        <img src={avatarPreview || user.avatar || '/default-avatar.png'} alt=\"avatar\" className=\"w-20 h-20 rounded-full object-cover border-2 border-yellow-400\" />\r\n+        <img\r\n+          src={avatarPreview || user.avatar || \"/default-avatar.png\"}\r\n+          alt=\"avatar\"\r\n+          className=\"w-20 h-20 rounded-full object-cover border-2 border-yellow-400\"\r\n+        />\r\n         <div>\r\n-          <input type=\"file\" accept=\"image/*\" onChange={handleAvatarChange} className=\"mb-2\" />\r\n-          {avatarFile && <button onClick={handleAvatarUpload} className=\"bg-pink-600 px-3 py-1 rounded\">Upload</button>}\r\n+          <input\r\n+            type=\"file\"\r\n+            accept=\"image/*\"\r\n+            onChange={handleAvatarChange}\r\n+            className=\"mb-2\"\r\n+          />\r\n+          {avatarFile && (\r\n+            <button\r\n+              onClick={handleAvatarUpload}\r\n+              className=\"bg-pink-600 px-3 py-1 rounded\"\r\n+            >\r\n+              Upload\r\n+            </button>\r\n+          )}\r\n         </div>\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Full Name</label>\r\n         {editMode ? (\r\n-          <input name=\"firstName\" value={form.firstName || ''} onChange={handleChange} className=\"input-field\" placeholder=\"First Name\" />\r\n+          <input\r\n+            name=\"firstName\"\r\n+            value={form.firstName || \"\"}\r\n+            onChange={handleChange}\r\n+            className=\"input-field\"\r\n+            placeholder=\"First Name\"\r\n+          />\r\n         ) : (\r\n-          <span>{user.firstName} {user.lastName}</span>\r\n+          <span>\r\n+            {user.firstName} {user.lastName}\r\n+          </span>\r\n         )}\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Username</label>\r\n@@ -116,35 +196,74 @@\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Email</label>\r\n         {editMode ? (\r\n-          <input name=\"email\" value={form.email || ''} onChange={handleChange} className=\"input-field\" />\r\n+          <input\r\n+            name=\"email\"\r\n+            value={form.email || \"\"}\r\n+            onChange={handleChange}\r\n+            className=\"input-field\"\r\n+          />\r\n         ) : (\r\n           <span>{user.email}</span>\r\n         )}\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Phone</label>\r\n         {editMode ? (\r\n-          <input name=\"phone\" value={form.phone || ''} onChange={handleChange} className=\"input-field\" />\r\n+          <input\r\n+            name=\"phone\"\r\n+            value={form.phone || \"\"}\r\n+            onChange={handleChange}\r\n+            className=\"input-field\"\r\n+          />\r\n         ) : (\r\n-          <span>{user.phone || '-'}</span>\r\n+          <span>{user.phone || \"-\"}</span>\r\n         )}\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Address</label>\r\n         {editMode ? (\r\n-          <input name=\"address\" value={form.address || ''} onChange={handleChange} className=\"input-field\" />\r\n+          <input\r\n+            name=\"address\"\r\n+            value={form.address || \"\"}\r\n+            onChange={handleChange}\r\n+            className=\"input-field\"\r\n+          />\r\n         ) : (\r\n-          <span>{user.address || '-'}</span>\r\n+          <span>{user.address || \"-\"}</span>\r\n         )}\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Communication Preferences</label>\r\n         <div className=\"flex gap-4\">\r\n-          <label><input type=\"checkbox\" name=\"email\" checked={commPrefs.email} onChange={handleCommPrefChange} /> Email</label>\r\n-          <label><input type=\"checkbox\" name=\"sms\" checked={commPrefs.sms} onChange={handleCommPrefChange} /> SMS</label>\r\n-          <label><input type=\"checkbox\" name=\"call\" checked={commPrefs.call} onChange={handleCommPrefChange} /> Calls</label>\r\n+          <label>\r\n+            <input\r\n+              type=\"checkbox\"\r\n+              name=\"email\"\r\n+              checked={commPrefs.email}\r\n+              onChange={handleCommPrefChange}\r\n+            />{\" \"}\r\n+            Email\r\n+          </label>\r\n+          <label>\r\n+            <input\r\n+              type=\"checkbox\"\r\n+              name=\"sms\"\r\n+              checked={commPrefs.sms}\r\n+              onChange={handleCommPrefChange}\r\n+            />{\" \"}\r\n+            SMS\r\n+          </label>\r\n+          <label>\r\n+            <input\r\n+              type=\"checkbox\"\r\n+              name=\"call\"\r\n+              checked={commPrefs.call}\r\n+              onChange={handleCommPrefChange}\r\n+            />{\" \"}\r\n+            Calls\r\n+          </label>\r\n         </div>\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Gameplay Stats</label>\r\n@@ -155,52 +274,150 @@\n         </div>\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Verification</label>\r\n-        <div className=\"mb-2\">Status: <span className=\"font-bold\">{user.verificationStatus}</span></div>\r\n+        <div className=\"mb-2\">\r\n+          Status: <span className=\"font-bold\">{user.verificationStatus}</span>\r\n+        </div>\r\n         <input type=\"file\" onChange={handleVerifFileChange} />\r\n-        <select value={verifType} onChange={e => setVerifType(e.target.value)} className=\"ml-2\">\r\n+        <select\r\n+          value={verifType}\r\n+          onChange={(e) => setVerifType(e.target.value)}\r\n+          className=\"ml-2\"\r\n+        >\r\n           <option value=\"id\">ID</option>\r\n           <option value=\"address\">Address</option>\r\n         </select>\r\n-        <button onClick={handleVerifUpload} className=\"ml-2 bg-yellow-500 px-3 py-1 rounded\">Upload</button>\r\n+        <button\r\n+          onClick={handleVerifUpload}\r\n+          className=\"ml-2 bg-yellow-500 px-3 py-1 rounded\"\r\n+        >\r\n+          Upload\r\n+        </button>\r\n         <ul className=\"mt-2 text-sm\">\r\n           {user.verificationDocs?.map((doc, i) => (\r\n-            <li key={i}>{doc.type}: {doc.status} <a href={`/${doc.url}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-400 underline\">View</a></li>\r\n+            <li key={i}>\r\n+              {doc.type}: {doc.status}{\" \"}\r\n+              <a\r\n+                href={`/${doc.url}`}\r\n+                target=\"_blank\"\r\n+                rel=\"noopener noreferrer\"\r\n+                className=\"text-blue-400 underline\"\r\n+              >\r\n+                View\r\n+              </a>\r\n+            </li>\r\n           ))}\r\n         </ul>\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Change Password</label>\r\n-        <input type=\"password\" name=\"oldPassword\" value={passwords.oldPassword} onChange={handlePasswordChange} className=\"input-field mb-2\" placeholder=\"Old Password\" />\r\n-        <input type=\"password\" name=\"newPassword\" value={passwords.newPassword} onChange={handlePasswordChange} className=\"input-field mb-2\" placeholder=\"New Password\" />\r\n-        <button onClick={handlePasswordSubmit} className=\"bg-pink-600 px-3 py-1 rounded\">Change Password</button>\r\n+        <input\r\n+          type=\"password\"\r\n+          name=\"oldPassword\"\r\n+          value={passwords.oldPassword}\r\n+          onChange={handlePasswordChange}\r\n\\ No newline at end of file\n+          className=\"input-field mb-2\"\r\n+          placeholder=\"Old Password\"\r\n+        />\r\n+        <input\r\n+          type=\"password\"\r\n+          name=\"newPassword\"\r\n+          value={passwords.newPassword}\r\n+          onChange={handlePasswordChange}\r\n+          className=\"input-field mb-2\"\r\n+          placeholder=\"New Password\"\r\n+        />\r\n+        <button\r\n+          onClick={handlePasswordSubmit}\r\n+          className=\"bg-pink-600 px-3 py-1 rounded\"\r\n+        >\r\n+          Change Password\r\n+        </button>\r\n       </div>\r\n       <div className=\"mb-4\">\r\n         <label className=\"block font-semibold\">Self-Exclusion</label>\r\n         <div className=\"flex gap-4 mb-2\">\r\n-          <label><input type=\"checkbox\" name=\"isActive\" checked={selfExclusion.isActive} onChange={e => setSelfExclusion({ ...selfExclusion, isActive: e.target.checked })} /> Active</label>\r\n-          <select name=\"type\" value={selfExclusion.type} onChange={handleSelfExclusionChange}>\r\n+          <label>\r\n+            <input\r\n+              type=\"checkbox\"\r\n+              name=\"isActive\"\r\n+              checked={selfExclusion.isActive}\r\n+              onChange={(e) =>\r\n+                setSelfExclusion({\r\n+                  ...selfExclusion,\r\n+                  isActive: e.target.checked,\r\n+                })\r\n+              }\r\n+            />{\" \"}\r\n+            Active\r\n+          </label>\r\n+          <select\r\n+            name=\"type\"\r\n+            value={selfExclusion.type}\r\n+            onChange={handleSelfExclusionChange}\r\n+          >\r\n             <option value=\"temporary\">Temporary</option>\r\n             <option value=\"permanent\">Permanent</option>\r\n           </select>\r\n         </div>\r\n-        <input type=\"text\" name=\"reason\" value={selfExclusion.reason} onChange={handleSelfExclusionChange} className=\"input-field mb-2\" placeholder=\"Reason (optional)\" />\r\n-        <input type=\"date\" name=\"startDate\" value={selfExclusion.startDate || ''} onChange={handleSelfExclusionChange} className=\"input-field mb-2\" placeholder=\"Start Date\" />\r\n-        <input type=\"date\" name=\"endDate\" value={selfExclusion.endDate || ''} onChange={handleSelfExclusionChange} className=\"input-field mb-2\" placeholder=\"End Date\" />\r\n-        <button onClick={handleSelfExclusionSubmit} className=\"bg-yellow-500 px-3 py-1 rounded\">Update Self-Exclusion</button>\r\n+        <input\r\n+          type=\"text\"\r\n+          name=\"reason\"\r\n+          value={selfExclusion.reason}\r\n+          onChange={handleSelfExclusionChange}\r\n+          className=\"input-field mb-2\"\r\n+          placeholder=\"Reason (optional)\"\r\n+        />\r\n+        <input\r\n+          type=\"date\"\r\n+          name=\"startDate\"\r\n+          value={selfExclusion.startDate || \"\"}\r\n+          onChange={handleSelfExclusionChange}\r\n+          className=\"input-field mb-2\"\r\n+          placeholder=\"Start Date\"\r\n+        />\r\n+        <input\r\n+          type=\"date\"\r\n+          name=\"endDate\"\r\n+          value={selfExclusion.endDate || \"\"}\r\n+          onChange={handleSelfExclusionChange}\r\n+          className=\"input-field mb-2\"\r\n+          placeholder=\"End Date\"\r\n+        />\r\n+        <button\r\n+          onClick={handleSelfExclusionSubmit}\r\n+          className=\"bg-yellow-500 px-3 py-1 rounded\"\r\n+        >\r\n+          Update Self-Exclusion\r\n+        </button>\r\n       </div>\r\n       <div className=\"flex gap-4 mt-6\">\r\n         {editMode ? (\r\n           <>\r\n-            <button onClick={handleSave} className=\"bg-green-600 px-4 py-2 rounded\">Save</button>\r\n-            <button onClick={handleCancel} className=\"bg-gray-600 px-4 py-2 rounded\">Cancel</button>\r\n+            <button\r\n+              onClick={handleSave}\r\n+              className=\"bg-green-600 px-4 py-2 rounded\"\r\n+            >\r\n+              Save\r\n+            </button>\r\n+            <button\r\n+              onClick={handleCancel}\r\n+              className=\"bg-gray-600 px-4 py-2 rounded\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n           </>\r\n         ) : (\r\n-          <button onClick={handleEdit} className=\"bg-blue-600 px-4 py-2 rounded\">Edit Profile</button>\r\n+          <button\r\n+            onClick={handleEdit}\r\n+            className=\"bg-blue-600 px-4 py-2 rounded\"\r\n+          >\r\n+            Edit Profile\r\n+          </button>\r\n         )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n-export default Profile; \n+export default Profile;\r\n"
                },
                {
                    "date": 1753100661498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,13 @@\n   });\r\n   const [message, setMessage] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n+    const token = localStorage.getItem('authToken');\r\n     axios\r\n-      .get(`${API_BASE_URL}/users/me`, { withCredentials: true })\r\n+      .get(`${API_BASE_URL}/users/me`, {\r\n+        headers: { Authorization: `Bearer ${token}` },\r\n+      })\r\n       .then((res) => {\r\n         setUser(res.data);\r\n         setForm(res.data);\r\n         setCommPrefs(\r\n@@ -54,9 +57,8 @@\n         );\r\n       })\r\n       .catch((err) => {\r\n         if (err.response && err.response.status === 401) {\r\n-          // Redirect to login or show a message\r\n           window.location.href = \"/login\";\r\n         }\r\n       });\r\n   }, []);\r\n@@ -71,17 +73,18 @@\n   const handleCommPrefChange = (e) =>\r\n     setCommPrefs({ ...commPrefs, [e.target.name]: e.target.checked });\r\n \r\n   const handleSave = async () => {\r\n+    const token = localStorage.getItem('authToken');\r\n     await axios.patch(\r\n       `${API_BASE_URL}/users/me`,\r\n       { ...form, communicationPreferences: commPrefs },\r\n-      { withCredentials: true }\r\n+      { headers: { Authorization: `Bearer ${token}` } }\r\n     );\r\n     setEditMode(false);\r\n     setMessage(\"Profile updated!\");\r\n     const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setUser(res.data);\r\n   };\r\n \r\n@@ -90,16 +93,17 @@\n     setAvatarPreview(URL.createObjectURL(e.target.files[0]));\r\n   };\r\n   const handleAvatarUpload = async () => {\r\n     if (!avatarFile) return;\r\n+    const token = localStorage.getItem('authToken');\r\n     const formData = new FormData();\r\n     formData.append(\"avatar\", avatarFile);\r\n     await axios.post(`${API_BASE_URL}/users/me/avatar`, formData, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setMessage(\"Avatar updated!\");\r\n     const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setUser(res.data);\r\n     setAvatarFile(null);\r\n     setAvatarPreview(null);\r\n@@ -107,41 +111,44 @@\n \r\n   const handleVerifFileChange = (e) => setVerifFile(e.target.files[0]);\r\n   const handleVerifUpload = async () => {\r\n     if (!verifFile) return;\r\n+    const token = localStorage.getItem('authToken');\r\n     const formData = new FormData();\r\n     formData.append(\"document\", verifFile);\r\n     formData.append(\"type\", verifType);\r\n     await axios.post(`${API_BASE_URL}/users/me/verify`, formData, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setMessage(\"Verification document uploaded!\");\r\n     const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setUser(res.data);\r\n     setVerifFile(null);\r\n   };\r\n \r\n   const handlePasswordChange = (e) =>\r\n     setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n   const handlePasswordSubmit = async () => {\r\n+    const token = localStorage.getItem('authToken');\r\n     await axios.post(`${API_BASE_URL}/users/me/change-password`, passwords, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setMessage(\"Password changed!\");\r\n     setPasswords({ oldPassword: \"\", newPassword: \"\" });\r\n   };\r\n \r\n   const handleSelfExclusionChange = (e) =>\r\n     setSelfExclusion({ ...selfExclusion, [e.target.name]: e.target.value });\r\n   const handleSelfExclusionSubmit = async () => {\r\n+    const token = localStorage.getItem('authToken');\r\n     await axios.post(`${API_BASE_URL}/users/me/self-exclusion`, selfExclusion, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setMessage(\"Self-exclusion updated!\");\r\n     const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      withCredentials: true,\r\n+      headers: { Authorization: `Bearer ${token}` },\r\n     });\r\n     setUser(res.data);\r\n   };\r\n \r\n@@ -419,5 +426,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Profile;\n\\ No newline at end of file\n+export default Profile;\r\n"
                },
                {
                    "date": 1753101075099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,430 +1,152 @@\n import React, { useState, useEffect } from \"react\";\r\n+import { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\r\n import axios from \"axios\";\r\n \r\n-const API_BASE_URL =\r\n-  import.meta.env.VITE_API_BASE_URL || \"http://localhost:8004/api/v1\";\r\n+const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || \"http://localhost:8004/api/v1\";\r\n \r\n+function MyInfoModal({ user, open, onClose }) {\r\n+  if (!open) return null;\r\n+  return (\r\n+    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 z-50\">\r\n+      <div className=\"bg-gradient-to-br from-[#0a2a3a] to-[#0d1e2b] rounded-2xl p-8 shadow-xl relative min-w-[400px] max-w-[90vw]\">\r\n+        <button onClick={onClose} className=\"absolute top-4 right-4 text-3xl text-red-400 hover:text-red-600\">&times;</button>\r\n+        <div className=\"flex items-center gap-6 mb-6\">\r\n+          <img src={user.avatar || \"/default-avatar.png\"} alt=\"avatar\" className=\"w-28 h-28 rounded-full border-4 border-yellow-400 object-cover\" />\r\n+          <div>\r\n+            <div className=\"text-2xl font-bold text-white\">{user.firstName} {user.lastName}</div>\r\n+            <div className=\"text-lg text-gray-300\">ID: {user._id}</div>\r\n+            <div className=\"text-sm text-white mt-2\">Referred friend: 0</div>\r\n+            <div className=\"text-green-400 font-bold\">SC 0 Earned</div>\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-4\">\r\n+          <div className=\"rounded-xl border-2 border-pink-400 p-4 text-center\">\r\n+            <div className=\"text-3xl font-bold text-white\">{user.stats?.losses || 0}</div>\r\n+            <div className=\"text-lg text-white mt-2\">Losses</div>\r\n+          </div>\r\n+          <div className=\"rounded-xl border-2 border-yellow-400 p-4 text-center\">\r\n+            <div className=\"text-3xl font-bold text-white\">{user.stats?.wins || 0}</div>\r\n+            <div className=\"text-lg text-white mt-2\">Wins</div>\r\n+          </div>\r\n+          <div className=\"rounded-xl border-2 border-yellow-400 p-4 text-center\">\r\n+            <div className=\"text-3xl font-bold text-white\">{user.stats?.totalBets || 0}</div>\r\n+            <div className=\"text-lg text-white mt-2\">Bet</div>\r\n+          </div>\r\n+          <div className=\"rounded-xl border-2 border-yellow-400 p-4 text-center\">\r\n+            <div className=\"text-3xl font-bold text-white\">$20K</div>\r\n+            <div className=\"text-lg text-white mt-2\">Wagered</div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+function SettingsForm({ user }) {\r\n+  // Only sketching the structure for brevity\r\n+  return (\r\n+    <div className=\"max-w-2xl mx-auto p-6 bg-gray-900 rounded-lg shadow text-white mt-8\">\r\n+      <h2 className=\"text-2xl font-bold mb-4\">Profile</h2>\r\n+      <div className=\"flex gap-2 mb-6\">\r\n+        <button className=\"bg-yellow-400 text-black px-4 py-2 rounded font-bold\">Verify Profile</button>\r\n+        <button className=\"bg-gray-700 px-4 py-2 rounded\">Email</button>\r\n+        <button className=\"bg-gray-700 px-4 py-2 rounded\">Password</button>\r\n+        <button className=\"bg-gray-700 px-4 py-2 rounded\">Avatar</button>\r\n+        <button className=\"bg-gray-700 px-4 py-2 rounded\">Bonus Drop</button>\r\n+        <button className=\"bg-gray-700 px-4 py-2 rounded\">Document Verification</button>\r\n+        <button className=\"bg-gray-700 px-4 py-2 rounded\">Self Exclusion</button>\r\n+      </div>\r\n+      <form>\r\n+        <div className=\"mb-4 grid grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block font-semibold\">First Name</label>\r\n+            <input className=\"input-field w-full\" value={user.firstName || ''} disabled />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"block font-semibold\">Last Name</label>\r\n+            <input className=\"input-field w-full\" value={user.lastName || ''} disabled />\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"mb-4\">\r\n+          <label className=\"block font-semibold\">Email Address</label>\r\n+          <input className=\"input-field w-full\" value={user.email || ''} disabled />\r\n+        </div>\r\n+        <div className=\"mb-4\">\r\n+          <label className=\"block font-semibold\">Phone number</label>\r\n+          <input className=\"input-field w-full\" value={user.phone || ''} disabled />\r\n+        </div>\r\n+        <div className=\"mb-4\">\r\n+          <label className=\"block font-semibold\">Address</label>\r\n+          <input className=\"input-field w-full\" value={user.address || ''} placeholder=\"Street name and House no.\" />\r\n+          <div className=\"text-red-400 text-xs\">Required Field</div>\r\n+        </div>\r\n+        <div className=\"mb-4\">\r\n+          <input className=\"input-field w-full\" placeholder=\"Address line 2 (Optional)\" />\r\n+        </div>\r\n+        <div className=\"mb-4 grid grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block font-semibold\">State</label>\r\n+            <select className=\"input-field w-full\">\r\n+              <option>United States</option>\r\n+            </select>\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"block font-semibold\">City</label>\r\n+            <select className=\"input-field w-full\">\r\n+              <option>Texas</option>\r\n+            </select>\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"mb-4 grid grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"block font-semibold\">Zipcode</label>\r\n+            <input className=\"input-field w-full\" />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"block font-semibold\">Date of Birth</label>\r\n+            <input className=\"input-field w-full\" type=\"date\" />\r\n+          </div>\r\n+        </div>\r\n+        <div className=\"text-gray-400 mb-4\">All data is safely stored and encrypted.</div>\r\n+        <button type=\"submit\" className=\"bg-gradient-to-r from-orange-400 to-red-600 px-8 py-2 rounded-full text-white font-bold shadow-lg\">Save</button>\r\n+      </form>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n const Profile = () => {\r\n   const [user, setUser] = useState(null);\r\n-  const [editMode, setEditMode] = useState(false);\r\n-  const [form, setForm] = useState({});\r\n-  const [avatarFile, setAvatarFile] = useState(null);\r\n-  const [avatarPreview, setAvatarPreview] = useState(null);\r\n-  const [commPrefs, setCommPrefs] = useState({\r\n-    email: true,\r\n-    sms: false,\r\n-    call: false,\r\n-  });\r\n-  const [verifFile, setVerifFile] = useState(null);\r\n-  const [verifType, setVerifType] = useState(\"id\");\r\n-  const [passwords, setPasswords] = useState({\r\n-    oldPassword: \"\",\r\n-    newPassword: \"\",\r\n-  });\r\n-  const [selfExclusion, setSelfExclusion] = useState({\r\n-    isActive: false,\r\n-    reason: \"\",\r\n-    type: \"temporary\",\r\n-    startDate: \"\",\r\n-    endDate: \"\",\r\n-  });\r\n-  const [message, setMessage] = useState(\"\");\r\n+  const [showMyInfo, setShowMyInfo] = useState(false);\r\n+  const navigate = useNavigate();\r\n+  const location = useLocation();\r\n \r\n   useEffect(() => {\r\n     const token = localStorage.getItem('authToken');\r\n     axios\r\n       .get(`${API_BASE_URL}/users/me`, {\r\n         headers: { Authorization: `Bearer ${token}` },\r\n       })\r\n-      .then((res) => {\r\n-        setUser(res.data);\r\n-        setForm(res.data);\r\n-        setCommPrefs(\r\n-          res.data.communicationPreferences || {\r\n-            email: true,\r\n-            sms: false,\r\n-            call: false,\r\n-          }\r\n-        );\r\n-        setSelfExclusion(\r\n-          res.data.selfExclusion || {\r\n-            isActive: false,\r\n-            reason: \"\",\r\n-            type: \"temporary\",\r\n-            startDate: \"\",\r\n-            endDate: \"\",\r\n-          }\r\n-        );\r\n-      })\r\n-      .catch((err) => {\r\n-        if (err.response && err.response.status === 401) {\r\n-          window.location.href = \"/login\";\r\n-        }\r\n-      });\r\n+      .then((res) => setUser(res.data));\r\n   }, []);\r\n \r\n-  const handleEdit = () => setEditMode(true);\r\n-  const handleCancel = () => {\r\n-    setEditMode(false);\r\n-    setForm(user);\r\n-  };\r\n-  const handleChange = (e) =>\r\n-    setForm({ ...form, [e.target.name]: e.target.value });\r\n-  const handleCommPrefChange = (e) =>\r\n-    setCommPrefs({ ...commPrefs, [e.target.name]: e.target.checked });\r\n+  useEffect(() => {\r\n+    if (location.pathname === '/profile/my-info') setShowMyInfo(true);\r\n+    else setShowMyInfo(false);\r\n+  }, [location.pathname]);\r\n \r\n-  const handleSave = async () => {\r\n-    const token = localStorage.getItem('authToken');\r\n-    await axios.patch(\r\n-      `${API_BASE_URL}/users/me`,\r\n-      { ...form, communicationPreferences: commPrefs },\r\n-      { headers: { Authorization: `Bearer ${token}` } }\r\n-    );\r\n-    setEditMode(false);\r\n-    setMessage(\"Profile updated!\");\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setUser(res.data);\r\n-  };\r\n-\r\n-  const handleAvatarChange = (e) => {\r\n-    setAvatarFile(e.target.files[0]);\r\n-    setAvatarPreview(URL.createObjectURL(e.target.files[0]));\r\n-  };\r\n-  const handleAvatarUpload = async () => {\r\n-    if (!avatarFile) return;\r\n-    const token = localStorage.getItem('authToken');\r\n-    const formData = new FormData();\r\n-    formData.append(\"avatar\", avatarFile);\r\n-    await axios.post(`${API_BASE_URL}/users/me/avatar`, formData, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setMessage(\"Avatar updated!\");\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setUser(res.data);\r\n-    setAvatarFile(null);\r\n-    setAvatarPreview(null);\r\n-  };\r\n-\r\n-  const handleVerifFileChange = (e) => setVerifFile(e.target.files[0]);\r\n-  const handleVerifUpload = async () => {\r\n-    if (!verifFile) return;\r\n-    const token = localStorage.getItem('authToken');\r\n-    const formData = new FormData();\r\n-    formData.append(\"document\", verifFile);\r\n-    formData.append(\"type\", verifType);\r\n-    await axios.post(`${API_BASE_URL}/users/me/verify`, formData, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setMessage(\"Verification document uploaded!\");\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setUser(res.data);\r\n-    setVerifFile(null);\r\n-  };\r\n-\r\n-  const handlePasswordChange = (e) =>\r\n-    setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n-  const handlePasswordSubmit = async () => {\r\n-    const token = localStorage.getItem('authToken');\r\n-    await axios.post(`${API_BASE_URL}/users/me/change-password`, passwords, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setMessage(\"Password changed!\");\r\n-    setPasswords({ oldPassword: \"\", newPassword: \"\" });\r\n-  };\r\n-\r\n-  const handleSelfExclusionChange = (e) =>\r\n-    setSelfExclusion({ ...selfExclusion, [e.target.name]: e.target.value });\r\n-  const handleSelfExclusionSubmit = async () => {\r\n-    const token = localStorage.getItem('authToken');\r\n-    await axios.post(`${API_BASE_URL}/users/me/self-exclusion`, selfExclusion, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setMessage(\"Self-exclusion updated!\");\r\n-    const res = await axios.get(`${API_BASE_URL}/users/me`, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    });\r\n-    setUser(res.data);\r\n-  };\r\n-\r\n   if (!user) return <div className=\"text-white p-8\">Loading...</div>;\r\n \r\n   return (\r\n-    <div className=\"max-w-2xl mx-auto p-6 bg-gray-900 rounded-lg shadow text-white mt-8\">\r\n-      <h2 className=\"text-2xl font-bold mb-4\">Profile</h2>\r\n-      {message && <div className=\"mb-4 text-green-400\">{message}</div>}\r\n-      <div className=\"flex items-center gap-4 mb-4\">\r\n-        <img\r\n-          src={avatarPreview || user.avatar || \"/default-avatar.png\"}\r\n-          alt=\"avatar\"\r\n-          className=\"w-20 h-20 rounded-full object-cover border-2 border-yellow-400\"\r\n-        />\r\n-        <div>\r\n-          <input\r\n-            type=\"file\"\r\n-            accept=\"image/*\"\r\n-            onChange={handleAvatarChange}\r\n-            className=\"mb-2\"\r\n-          />\r\n-          {avatarFile && (\r\n-            <button\r\n-              onClick={handleAvatarUpload}\r\n-              className=\"bg-pink-600 px-3 py-1 rounded\"\r\n-            >\r\n-              Upload\r\n-            </button>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Full Name</label>\r\n-        {editMode ? (\r\n-          <input\r\n-            name=\"firstName\"\r\n-            value={form.firstName || \"\"}\r\n-            onChange={handleChange}\r\n-            className=\"input-field\"\r\n-            placeholder=\"First Name\"\r\n-          />\r\n-        ) : (\r\n-          <span>\r\n-            {user.firstName} {user.lastName}\r\n-          </span>\r\n-        )}\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Username</label>\r\n-        <span>{user.username}</span>\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Email</label>\r\n-        {editMode ? (\r\n-          <input\r\n-            name=\"email\"\r\n-            value={form.email || \"\"}\r\n-            onChange={handleChange}\r\n-            className=\"input-field\"\r\n-          />\r\n-        ) : (\r\n-          <span>{user.email}</span>\r\n-        )}\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Phone</label>\r\n-        {editMode ? (\r\n-          <input\r\n-            name=\"phone\"\r\n-            value={form.phone || \"\"}\r\n-            onChange={handleChange}\r\n-            className=\"input-field\"\r\n-          />\r\n-        ) : (\r\n-          <span>{user.phone || \"-\"}</span>\r\n-        )}\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Address</label>\r\n-        {editMode ? (\r\n-          <input\r\n-            name=\"address\"\r\n-            value={form.address || \"\"}\r\n-            onChange={handleChange}\r\n-            className=\"input-field\"\r\n-          />\r\n-        ) : (\r\n-          <span>{user.address || \"-\"}</span>\r\n-        )}\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Communication Preferences</label>\r\n-        <div className=\"flex gap-4\">\r\n-          <label>\r\n-            <input\r\n-              type=\"checkbox\"\r\n-              name=\"email\"\r\n-              checked={commPrefs.email}\r\n-              onChange={handleCommPrefChange}\r\n-            />{\" \"}\r\n-            Email\r\n-          </label>\r\n-          <label>\r\n-            <input\r\n-              type=\"checkbox\"\r\n-              name=\"sms\"\r\n-              checked={commPrefs.sms}\r\n-              onChange={handleCommPrefChange}\r\n-            />{\" \"}\r\n-            SMS\r\n-          </label>\r\n-          <label>\r\n-            <input\r\n-              type=\"checkbox\"\r\n-              name=\"call\"\r\n-              checked={commPrefs.call}\r\n-              onChange={handleCommPrefChange}\r\n-            />{\" \"}\r\n-            Calls\r\n-          </label>\r\n-        </div>\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Gameplay Stats</label>\r\n-        <div className=\"flex gap-8\">\r\n-          <span>Wins: {user.stats?.wins || 0}</span>\r\n-          <span>Losses: {user.stats?.losses || 0}</span>\r\n-          <span>Total Bets: {user.stats?.totalBets || 0}</span>\r\n-        </div>\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Verification</label>\r\n-        <div className=\"mb-2\">\r\n-          Status: <span className=\"font-bold\">{user.verificationStatus}</span>\r\n-        </div>\r\n-        <input type=\"file\" onChange={handleVerifFileChange} />\r\n-        <select\r\n-          value={verifType}\r\n-          onChange={(e) => setVerifType(e.target.value)}\r\n-          className=\"ml-2\"\r\n-        >\r\n-          <option value=\"id\">ID</option>\r\n-          <option value=\"address\">Address</option>\r\n-        </select>\r\n-        <button\r\n-          onClick={handleVerifUpload}\r\n-          className=\"ml-2 bg-yellow-500 px-3 py-1 rounded\"\r\n-        >\r\n-          Upload\r\n-        </button>\r\n-        <ul className=\"mt-2 text-sm\">\r\n-          {user.verificationDocs?.map((doc, i) => (\r\n-            <li key={i}>\r\n-              {doc.type}: {doc.status}{\" \"}\r\n-              <a\r\n-                href={`/${doc.url}`}\r\n-                target=\"_blank\"\r\n-                rel=\"noopener noreferrer\"\r\n-                className=\"text-blue-400 underline\"\r\n-              >\r\n-                View\r\n-              </a>\r\n-            </li>\r\n-          ))}\r\n-        </ul>\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Change Password</label>\r\n-        <input\r\n-          type=\"password\"\r\n-          name=\"oldPassword\"\r\n-          value={passwords.oldPassword}\r\n-          onChange={handlePasswordChange}\r\n-          className=\"input-field mb-2\"\r\n-          placeholder=\"Old Password\"\r\n-        />\r\n-        <input\r\n-          type=\"password\"\r\n-          name=\"newPassword\"\r\n-          value={passwords.newPassword}\r\n-          onChange={handlePasswordChange}\r\n-          className=\"input-field mb-2\"\r\n-          placeholder=\"New Password\"\r\n-        />\r\n-        <button\r\n-          onClick={handlePasswordSubmit}\r\n-          className=\"bg-pink-600 px-3 py-1 rounded\"\r\n-        >\r\n-          Change Password\r\n-        </button>\r\n-      </div>\r\n-      <div className=\"mb-4\">\r\n-        <label className=\"block font-semibold\">Self-Exclusion</label>\r\n-        <div className=\"flex gap-4 mb-2\">\r\n-          <label>\r\n-            <input\r\n-              type=\"checkbox\"\r\n-              name=\"isActive\"\r\n-              checked={selfExclusion.isActive}\r\n-              onChange={(e) =>\r\n-                setSelfExclusion({\r\n-                  ...selfExclusion,\r\n-                  isActive: e.target.checked,\r\n-                })\r\n-              }\r\n-            />{\" \"}\r\n-            Active\r\n-          </label>\r\n-          <select\r\n-            name=\"type\"\r\n-            value={selfExclusion.type}\r\n-            onChange={handleSelfExclusionChange}\r\n-          >\r\n-            <option value=\"temporary\">Temporary</option>\r\n-            <option value=\"permanent\">Permanent</option>\r\n-          </select>\r\n-        </div>\r\n-        <input\r\n-          type=\"text\"\r\n-          name=\"reason\"\r\n-          value={selfExclusion.reason}\r\n-          onChange={handleSelfExclusionChange}\r\n-          className=\"input-field mb-2\"\r\n-          placeholder=\"Reason (optional)\"\r\n-        />\r\n-        <input\r\n-          type=\"date\"\r\n-          name=\"startDate\"\r\n-          value={selfExclusion.startDate || \"\"}\r\n-          onChange={handleSelfExclusionChange}\r\n-          className=\"input-field mb-2\"\r\n-          placeholder=\"Start Date\"\r\n-        />\r\n-        <input\r\n-          type=\"date\"\r\n-          name=\"endDate\"\r\n-          value={selfExclusion.endDate || \"\"}\r\n-          onChange={handleSelfExclusionChange}\r\n-          className=\"input-field mb-2\"\r\n-          placeholder=\"End Date\"\r\n-        />\r\n-        <button\r\n-          onClick={handleSelfExclusionSubmit}\r\n-          className=\"bg-yellow-500 px-3 py-1 rounded\"\r\n-        >\r\n-          Update Self-Exclusion\r\n-        </button>\r\n-      </div>\r\n-      <div className=\"flex gap-4 mt-6\">\r\n-        {editMode ? (\r\n-          <>\r\n-            <button\r\n-              onClick={handleSave}\r\n-              className=\"bg-green-600 px-4 py-2 rounded\"\r\n-            >\r\n-              Save\r\n-            </button>\r\n-            <button\r\n-              onClick={handleCancel}\r\n-              className=\"bg-gray-600 px-4 py-2 rounded\"\r\n-            >\r\n-              Cancel\r\n-            </button>\r\n-          </>\r\n-        ) : (\r\n-          <button\r\n-            onClick={handleEdit}\r\n-            className=\"bg-blue-600 px-4 py-2 rounded\"\r\n-          >\r\n-            Edit Profile\r\n-          </button>\r\n-        )}\r\n-      </div>\r\n-    </div>\r\n+    <>\r\n+      <Routes>\r\n+        <Route path=\"my-info\" element={<MyInfoModal user={user} open={showMyInfo} onClose={() => navigate('/profile')} />} />\r\n+        <Route path=\"settings\" element={<SettingsForm user={user} />} />\r\n+        {/* Add more routes for other tabs as needed */}\r\n+      </Routes>\r\n+      {/* Optionally, render settings by default if not in a sub-route */}\r\n+      {location.pathname === '/profile' && <SettingsForm user={user} />}\r\n+    </>\r\n   );\r\n };\r\n \r\n export default Profile;\r\n"
                },
                {
                    "date": 1753101225145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,26 +59,26 @@\n       <form>\r\n         <div className=\"mb-4 grid grid-cols-2 gap-4\">\r\n           <div>\r\n             <label className=\"block font-semibold\">First Name</label>\r\n-            <input className=\"input-field w-full\" value={user.firstName || ''} disabled />\r\n+            <input className=\"input-field w-full\" value={user.firstName || ''} readOnly />\r\n           </div>\r\n           <div>\r\n             <label className=\"block font-semibold\">Last Name</label>\r\n-            <input className=\"input-field w-full\" value={user.lastName || ''} disabled />\r\n+            <input className=\"input-field w-full\" value={user.lastName || ''} readOnly />\r\n           </div>\r\n         </div>\r\n         <div className=\"mb-4\">\r\n           <label className=\"block font-semibold\">Email Address</label>\r\n-          <input className=\"input-field w-full\" value={user.email || ''} disabled />\r\n+          <input className=\"input-field w-full\" value={user.email || ''} readOnly />\r\n         </div>\r\n         <div className=\"mb-4\">\r\n           <label className=\"block font-semibold\">Phone number</label>\r\n-          <input className=\"input-field w-full\" value={user.phone || ''} disabled />\r\n+          <input className=\"input-field w-full\" value={user.phone || ''} readOnly />\r\n         </div>\r\n         <div className=\"mb-4\">\r\n           <label className=\"block font-semibold\">Address</label>\r\n-          <input className=\"input-field w-full\" value={user.address || ''} placeholder=\"Street name and House no.\" />\r\n+          <input className=\"input-field w-full\" value={user.address || ''} placeholder=\"Street name and House no.\" onChange={() => {}} />\r\n           <div className=\"text-red-400 text-xs\">Required Field</div>\r\n         </div>\r\n         <div className=\"mb-4\">\r\n           <input className=\"input-field w-full\" placeholder=\"Address line 2 (Optional)\" />\r\n"
                },
                {
                    "date": 1753102000450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,11 +140,9 @@\n     <>\r\n       <Routes>\r\n         <Route path=\"my-info\" element={<MyInfoModal user={user} open={showMyInfo} onClose={() => navigate('/profile')} />} />\r\n         <Route path=\"settings\" element={<SettingsForm user={user} />} />\r\n-        {/* Add more routes for other tabs as needed */}\r\n       </Routes>\r\n-      {/* Optionally, render settings by default if not in a sub-route */}\r\n       {location.pathname === '/profile' && <SettingsForm user={user} />}\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1753102006808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n   );\r\n }\r\n \r\n function SettingsForm({ user }) {\r\n-  // Only sketching the structure for brevity\r\n   return (\r\n     <div className=\"max-w-2xl mx-auto p-6 bg-gray-900 rounded-lg shadow text-white mt-8\">\r\n       <h2 className=\"text-2xl font-bold mb-4\">Profile</h2>\r\n       <div className=\"flex gap-2 mb-6\">\r\n"
                }
            ],
            "date": 1753094645690,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8004/api/v1';\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [form, setForm] = useState({});\r\n  const [avatarFile, setAvatarFile] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState(null);\r\n  const [commPrefs, setCommPrefs] = useState({ email: true, sms: false, call: false });\r\n  const [verifFile, setVerifFile] = useState(null);\r\n  const [verifType, setVerifType] = useState('id');\r\n  const [passwords, setPasswords] = useState({ oldPassword: '', newPassword: '' });\r\n  const [selfExclusion, setSelfExclusion] = useState({ isActive: false, reason: '', type: 'temporary', startDate: '', endDate: '' });\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true })\r\n      .then(res => {\r\n        setUser(res.data);\r\n        setForm(res.data);\r\n        setCommPrefs(res.data.communicationPreferences || { email: true, sms: false, call: false });\r\n        setSelfExclusion(res.data.selfExclusion || { isActive: false, reason: '', type: 'temporary', startDate: '', endDate: '' });\r\n      });\r\n  }, []);\r\n\r\n  const handleEdit = () => setEditMode(true);\r\n  const handleCancel = () => { setEditMode(false); setForm(user); };\r\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n  const handleCommPrefChange = e => setCommPrefs({ ...commPrefs, [e.target.name]: e.target.checked });\r\n\r\n  const handleSave = async () => {\r\n    await axios.patch(`${API_BASE_URL}/users/me`, { ...form, communicationPreferences: commPrefs }, { withCredentials: true });\r\n    setEditMode(false);\r\n    setMessage('Profile updated!');\r\n    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n    setUser(res.data);\r\n  };\r\n\r\n  const handleAvatarChange = e => {\r\n    setAvatarFile(e.target.files[0]);\r\n    setAvatarPreview(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n  const handleAvatarUpload = async () => {\r\n    if (!avatarFile) return;\r\n    const formData = new FormData();\r\n    formData.append('avatar', avatarFile);\r\n    await axios.post(`${API_BASE_URL}/users/me/avatar`, formData, { withCredentials: true });\r\n    setMessage('Avatar updated!');\r\n    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n    setUser(res.data);\r\n    setAvatarFile(null);\r\n    setAvatarPreview(null);\r\n  };\r\n\r\n  const handleVerifFileChange = e => setVerifFile(e.target.files[0]);\r\n  const handleVerifUpload = async () => {\r\n    if (!verifFile) return;\r\n    const formData = new FormData();\r\n    formData.append('document', verifFile);\r\n    formData.append('type', verifType);\r\n    await axios.post(`${API_BASE_URL}/users/me/verify`, formData, { withCredentials: true });\r\n    setMessage('Verification document uploaded!');\r\n    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n    setUser(res.data);\r\n    setVerifFile(null);\r\n  };\r\n\r\n  const handlePasswordChange = e => setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n  const handlePasswordSubmit = async () => {\r\n    await axios.post(`${API_BASE_URL}/users/me/change-password`, passwords, { withCredentials: true });\r\n    setMessage('Password changed!');\r\n    setPasswords({ oldPassword: '', newPassword: '' });\r\n  };\r\n\r\n  const handleSelfExclusionChange = e => setSelfExclusion({ ...selfExclusion, [e.target.name]: e.target.value });\r\n  const handleSelfExclusionSubmit = async () => {\r\n    await axios.post(`${API_BASE_URL}/users/me/self-exclusion`, selfExclusion, { withCredentials: true });\r\n    setMessage('Self-exclusion updated!');\r\n    const res = await axios.get(`${API_BASE_URL}/users/me`, { withCredentials: true });\r\n    setUser(res.data);\r\n  };\r\n\r\n  if (!user) return <div className=\"text-white p-8\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 bg-gray-900 rounded-lg shadow text-white mt-8\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Profile</h2>\r\n      {message && <div className=\"mb-4 text-green-400\">{message}</div>}\r\n      <div className=\"flex items-center gap-4 mb-4\">\r\n        <img src={avatarPreview || user.avatar || '/default-avatar.png'} alt=\"avatar\" className=\"w-20 h-20 rounded-full object-cover border-2 border-yellow-400\" />\r\n        <div>\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleAvatarChange} className=\"mb-2\" />\r\n          {avatarFile && <button onClick={handleAvatarUpload} className=\"bg-pink-600 px-3 py-1 rounded\">Upload</button>}\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Full Name</label>\r\n        {editMode ? (\r\n          <input name=\"firstName\" value={form.firstName || ''} onChange={handleChange} className=\"input-field\" placeholder=\"First Name\" />\r\n        ) : (\r\n          <span>{user.firstName} {user.lastName}</span>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Username</label>\r\n        <span>{user.username}</span>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Email</label>\r\n        {editMode ? (\r\n          <input name=\"email\" value={form.email || ''} onChange={handleChange} className=\"input-field\" />\r\n        ) : (\r\n          <span>{user.email}</span>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Phone</label>\r\n        {editMode ? (\r\n          <input name=\"phone\" value={form.phone || ''} onChange={handleChange} className=\"input-field\" />\r\n        ) : (\r\n          <span>{user.phone || '-'}</span>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Address</label>\r\n        {editMode ? (\r\n          <input name=\"address\" value={form.address || ''} onChange={handleChange} className=\"input-field\" />\r\n        ) : (\r\n          <span>{user.address || '-'}</span>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Communication Preferences</label>\r\n        <div className=\"flex gap-4\">\r\n          <label><input type=\"checkbox\" name=\"email\" checked={commPrefs.email} onChange={handleCommPrefChange} /> Email</label>\r\n          <label><input type=\"checkbox\" name=\"sms\" checked={commPrefs.sms} onChange={handleCommPrefChange} /> SMS</label>\r\n          <label><input type=\"checkbox\" name=\"call\" checked={commPrefs.call} onChange={handleCommPrefChange} /> Calls</label>\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Gameplay Stats</label>\r\n        <div className=\"flex gap-8\">\r\n          <span>Wins: {user.stats?.wins || 0}</span>\r\n          <span>Losses: {user.stats?.losses || 0}</span>\r\n          <span>Total Bets: {user.stats?.totalBets || 0}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Verification</label>\r\n        <div className=\"mb-2\">Status: <span className=\"font-bold\">{user.verificationStatus}</span></div>\r\n        <input type=\"file\" onChange={handleVerifFileChange} />\r\n        <select value={verifType} onChange={e => setVerifType(e.target.value)} className=\"ml-2\">\r\n          <option value=\"id\">ID</option>\r\n          <option value=\"address\">Address</option>\r\n        </select>\r\n        <button onClick={handleVerifUpload} className=\"ml-2 bg-yellow-500 px-3 py-1 rounded\">Upload</button>\r\n        <ul className=\"mt-2 text-sm\">\r\n          {user.verificationDocs?.map((doc, i) => (\r\n            <li key={i}>{doc.type}: {doc.status} <a href={`/${doc.url}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-400 underline\">View</a></li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Change Password</label>\r\n        <input type=\"password\" name=\"oldPassword\" value={passwords.oldPassword} onChange={handlePasswordChange} className=\"input-field mb-2\" placeholder=\"Old Password\" />\r\n        <input type=\"password\" name=\"newPassword\" value={passwords.newPassword} onChange={handlePasswordChange} className=\"input-field mb-2\" placeholder=\"New Password\" />\r\n        <button onClick={handlePasswordSubmit} className=\"bg-pink-600 px-3 py-1 rounded\">Change Password</button>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block font-semibold\">Self-Exclusion</label>\r\n        <div className=\"flex gap-4 mb-2\">\r\n          <label><input type=\"checkbox\" name=\"isActive\" checked={selfExclusion.isActive} onChange={e => setSelfExclusion({ ...selfExclusion, isActive: e.target.checked })} /> Active</label>\r\n          <select name=\"type\" value={selfExclusion.type} onChange={handleSelfExclusionChange}>\r\n            <option value=\"temporary\">Temporary</option>\r\n            <option value=\"permanent\">Permanent</option>\r\n          </select>\r\n        </div>\r\n        <input type=\"text\" name=\"reason\" value={selfExclusion.reason} onChange={handleSelfExclusionChange} className=\"input-field mb-2\" placeholder=\"Reason (optional)\" />\r\n        <input type=\"date\" name=\"startDate\" value={selfExclusion.startDate || ''} onChange={handleSelfExclusionChange} className=\"input-field mb-2\" placeholder=\"Start Date\" />\r\n        <input type=\"date\" name=\"endDate\" value={selfExclusion.endDate || ''} onChange={handleSelfExclusionChange} className=\"input-field mb-2\" placeholder=\"End Date\" />\r\n        <button onClick={handleSelfExclusionSubmit} className=\"bg-yellow-500 px-3 py-1 rounded\">Update Self-Exclusion</button>\r\n      </div>\r\n      <div className=\"flex gap-4 mt-6\">\r\n        {editMode ? (\r\n          <>\r\n            <button onClick={handleSave} className=\"bg-green-600 px-4 py-2 rounded\">Save</button>\r\n            <button onClick={handleCancel} className=\"bg-gray-600 px-4 py-2 rounded\">Cancel</button>\r\n          </>\r\n        ) : (\r\n          <button onClick={handleEdit} className=\"bg-blue-600 px-4 py-2 rounded\">Edit Profile</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile; "
        }
    ]
}