{
    "sourceFile": "backend/middleware/jwtAuth.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753100619502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753100619502,
            "name": "Commit-0",
            "content": "import jwt from 'jsonwebtoken';\r\nimport User from '../models/User.js';\r\n\r\nexport default async function jwtAuth(req, res, next) {\r\n  const authHeader = req.headers.authorization;\r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    return res.status(401).json({ error: 'No token provided' });\r\n  }\r\n  const token = authHeader.split(' ')[1];\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n    req.user = await User.findById(decoded.id).select('-password');\r\n    if (!req.user) return res.status(401).json({ error: 'User not found' });\r\n    next();\r\n  } catch (err) {\r\n    return res.status(401).json({ error: 'Invalid token' });\r\n  }\r\n} "
        }
    ]
}