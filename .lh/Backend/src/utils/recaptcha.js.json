{
    "sourceFile": "Backend/src/utils/recaptcha.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752639339854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752639339854,
            "name": "Commit-0",
            "content": "import fetch from 'node-fetch'\r\n\r\n/**\r\n * Verify reCAPTCHA token with Google's API\r\n * @param {string} token - The reCAPTCHA token from the frontend\r\n * @returns {Promise<boolean>} - True if verification successful, false otherwise\r\n */\r\nexport async function verifyRecaptchaToken(token) {\r\n  try {\r\n    const secretKey = process.env.RECAPTCHA_SECRET_KEY\r\n    \r\n    if (!secretKey) {\r\n      console.error('RECAPTCHA_SECRET_KEY not found in environment variables')\r\n      return false\r\n    }\r\n\r\n    const verificationUrl = 'https://www.google.com/recaptcha/api/siteverify'\r\n    \r\n    const response = await fetch(verificationUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        secret: secretKey,\r\n        response: token,\r\n      }),\r\n    })\r\n\r\n    const data = await response.json()\r\n    \r\n    console.log('reCAPTCHA verification response:', data)\r\n    \r\n    return data.success === true\r\n  } catch (error) {\r\n    console.error('Error verifying reCAPTCHA token:', error)\r\n    return false\r\n  }\r\n} "
        }
    ]
}