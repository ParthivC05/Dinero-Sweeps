{
    "sourceFile": "Backend/src/configs/passport.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752664836532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752666268509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n const passport = require('passport');\r\n const GoogleStrategy = require('passport-google-oauth20').Strategy;\r\n const FacebookStrategy = require('passport-facebook').Strategy;\r\n+const jwt = require('jsonwebtoken');\r\n+const db = require('../db/models').default;\r\n \r\n-// Replace these with your actual credentials\r\n-const GOOGLE_CLIENT_ID = 'YOUR_GOOGLE_CLIENT_ID';\r\n-const GOOGLE_CLIENT_SECRET = 'YOUR_GOOGLE_CLIENT_SECRET';\r\n-const FACEBOOK_APP_ID = 'YOUR_FACEBOOK_APP_ID';\r\n-const FACEBOOK_APP_SECRET = 'YOUR_FACEBOOK_APP_SECRET';\r\n+const GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID;\r\n+const GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\r\n+const FACEBOOK_APP_ID = process.env.FACEBOOK_APP_ID;\r\n+const FACEBOOK_APP_SECRET = process.env.FACEBOOK_APP_SECRET;\r\n \r\n passport.serializeUser((user, done) => {\r\n   done(null, user);\r\n });\r\n@@ -17,39 +18,69 @@\n \r\n passport.use(new GoogleStrategy({\r\n   clientID: GOOGLE_CLIENT_ID,\r\n   clientSecret: GOOGLE_CLIENT_SECRET,\r\n-  callbackURL: 'http://54.234.145.12:8004/api/v1/auth/google/callback',\r\n-}, (accessToken, refreshToken, profile, done) => {\r\n-  // Map Google profile to your user model\r\n-  // Find or create user in DB, then call done(null, user)\r\n-  const user = {\r\n-    provider: 'google',\r\n-    id: profile.id,\r\n-    displayName: profile.displayName,\r\n-    email: profile.emails && profile.emails[0]?.value,\r\n-    photo: profile.photos && profile.photos[0]?.value,\r\n-    token: accessToken, // Replace with your JWT\r\n-  };\r\n-  return done(null, user);\r\n+  callbackURL: `${process.env.OAUTH_CALLBACK_BASE}/google/callback`,\r\n+}, async (accessToken, refreshToken, profile, done) => {\r\n+  try {\r\n+    let user = await db.User.findOne({ where: { email: profile.emails[0].value } });\r\n+    if (!user) {\r\n+      user = await db.User.create({\r\n+        email: profile.emails[0].value,\r\n+        firstName: profile.name.givenName,\r\n+        lastName: profile.name.familyName,\r\n+        username: profile.displayName,\r\n+        profileImage: profile.photos[0]?.value,\r\n+        isEmailVerified: true,\r\n+        password: '', // Not used for OAuth\r\n+        other: { googleId: profile.id }\r\n+      });\r\n+    }\r\n+    const payload = {\r\n+      id: user.userId,\r\n+      email: user.email,\r\n+      name: user.firstName + ' ' + user.lastName,\r\n+      provider: 'google'\r\n+    };\r\n+    const token = jwt.sign(payload, process.env.JWT_LOGIN_SECRET, { expiresIn: '2h' });\r\n+    user.token = token;\r\n+    return done(null, user);\r\n+  } catch (err) {\r\n+    return done(err, null);\r\n+  }\r\n }));\r\n \r\n passport.use(new FacebookStrategy({\r\n   clientID: FACEBOOK_APP_ID,\r\n   clientSecret: FACEBOOK_APP_SECRET,\r\n-  callbackURL: 'http://54.234.145.12:8004/api/v1/auth/facebook/callback',\r\n+  callbackURL: `${process.env.OAUTH_CALLBACK_BASE}/facebook/callback`,\r\n   profileFields: ['id', 'displayName', 'photos', 'email', 'birthday']\r\n-}, (accessToken, refreshToken, profile, done) => {\r\n-  // Map Facebook profile to your user model\r\n-  // Find or create user in DB, then call done(null, user)\r\n-  const user = {\r\n-    provider: 'facebook',\r\n-    id: profile.id,\r\n-    displayName: profile.displayName,\r\n-    email: profile.emails && profile.emails[0]?.value,\r\n-    photo: profile.photos && profile.photos[0]?.value,\r\n-    token: accessToken, // Replace with your JWT\r\n-  };\r\n-  return done(null, user);\r\n+}, async (accessToken, refreshToken, profile, done) => {\r\n+  try {\r\n+    let user = await db.User.findOne({ where: { email: profile.emails[0].value } });\r\n+    if (!user) {\r\n+      user = await db.User.create({\r\n+        email: profile.emails[0].value,\r\n+        firstName: profile.displayName.split(' ')[0],\r\n+        lastName: profile.displayName.split(' ').slice(1).join(' '),\r\n+        username: profile.displayName,\r\n+        profileImage: profile.photos[0]?.value,\r\n+        isEmailVerified: true,\r\n+        password: '', // Not used for OAuth\r\n+        other: { facebookId: profile.id }\r\n+      });\r\n+    }\r\n+    const payload = {\r\n+      id: user.userId,\r\n+      email: user.email,\r\n+      name: user.firstName + ' ' + user.lastName,\r\n+      provider: 'facebook'\r\n+    };\r\n+    const token = jwt.sign(payload, process.env.JWT_LOGIN_SECRET, { expiresIn: '2h' });\r\n+    user.token = token;\r\n+    return done(null, user);\r\n+  } catch (err) {\r\n+    return done(err, null);\r\n+  }\r\n }));\r\n \r\n module.exports = passport; \n\\ No newline at end of file\n"
                }
            ],
            "date": 1752664836532,
            "name": "Commit-0",
            "content": "const passport = require('passport');\r\nconst GoogleStrategy = require('passport-google-oauth20').Strategy;\r\nconst FacebookStrategy = require('passport-facebook').Strategy;\r\n\r\n// Replace these with your actual credentials\r\nconst GOOGLE_CLIENT_ID = 'YOUR_GOOGLE_CLIENT_ID';\r\nconst GOOGLE_CLIENT_SECRET = 'YOUR_GOOGLE_CLIENT_SECRET';\r\nconst FACEBOOK_APP_ID = 'YOUR_FACEBOOK_APP_ID';\r\nconst FACEBOOK_APP_SECRET = 'YOUR_FACEBOOK_APP_SECRET';\r\n\r\npassport.serializeUser((user, done) => {\r\n  done(null, user);\r\n});\r\npassport.deserializeUser((user, done) => {\r\n  done(null, user);\r\n});\r\n\r\npassport.use(new GoogleStrategy({\r\n  clientID: GOOGLE_CLIENT_ID,\r\n  clientSecret: GOOGLE_CLIENT_SECRET,\r\n  callbackURL: 'http://54.234.145.12:8004/api/v1/auth/google/callback',\r\n}, (accessToken, refreshToken, profile, done) => {\r\n  // Map Google profile to your user model\r\n  // Find or create user in DB, then call done(null, user)\r\n  const user = {\r\n    provider: 'google',\r\n    id: profile.id,\r\n    displayName: profile.displayName,\r\n    email: profile.emails && profile.emails[0]?.value,\r\n    photo: profile.photos && profile.photos[0]?.value,\r\n    token: accessToken, // Replace with your JWT\r\n  };\r\n  return done(null, user);\r\n}));\r\n\r\npassport.use(new FacebookStrategy({\r\n  clientID: FACEBOOK_APP_ID,\r\n  clientSecret: FACEBOOK_APP_SECRET,\r\n  callbackURL: 'http://54.234.145.12:8004/api/v1/auth/facebook/callback',\r\n  profileFields: ['id', 'displayName', 'photos', 'email', 'birthday']\r\n}, (accessToken, refreshToken, profile, done) => {\r\n  // Map Facebook profile to your user model\r\n  // Find or create user in DB, then call done(null, user)\r\n  const user = {\r\n    provider: 'facebook',\r\n    id: profile.id,\r\n    displayName: profile.displayName,\r\n    email: profile.emails && profile.emails[0]?.value,\r\n    photo: profile.photos && profile.photos[0]?.value,\r\n    token: accessToken, // Replace with your JWT\r\n  };\r\n  return done(null, user);\r\n}));\r\n\r\nmodule.exports = passport; "
        }
    ]
}