{
    "sourceFile": "backend/routes/game.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752729117174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752746191645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,129 +1,1 @@\n-import express from 'express';\r\n-import { protect } from '../middleware/auth.js';\r\n-import { validateGameBet } from '../middleware/validation.js';\r\n-\r\n-const router = express.Router();\r\n-\r\n-// All routes are protected\r\n-router.use(protect);\r\n-\r\n-// @desc    Get all games\r\n-// @route   GET /api/v1/game\r\n-// @access  Private\r\n-router.get('/', (req, res) => {\r\n-  // TODO: Implement get games logic\r\n-  const games = [\r\n-    {\r\n-      id: '1',\r\n-      name: 'Slot Machine',\r\n-      category: 'slots',\r\n-      image: '/images/slot-machine.jpg',\r\n-      minBet: 0.01,\r\n-      maxBet: 100,\r\n-    },\r\n-    {\r\n-      id: '2',\r\n-      name: 'Blackjack',\r\n-      category: 'table',\r\n-      image: '/images/blackjack.jpg',\r\n-      minBet: 1,\r\n-      maxBet: 500,\r\n-    },\r\n-    {\r\n-      id: '3',\r\n-      name: 'Roulette',\r\n-      category: 'table',\r\n-      image: '/images/roulette.jpg',\r\n-      minBet: 0.5,\r\n-      maxBet: 1000,\r\n-    },\r\n-  ];\r\n-\r\n-  res.json({\r\n-    success: true,\r\n-    data: {\r\n-      games,\r\n-    },\r\n-  });\r\n-});\r\n-\r\n-// @desc    Get game by ID\r\n-// @route   GET /api/v1/game/:id\r\n-// @access  Private\r\n-router.get('/:id', (req, res) => {\r\n-  // TODO: Implement get game by ID logic\r\n-  const game = {\r\n-    id: req.params.id,\r\n-    name: 'Sample Game',\r\n-    category: 'slots',\r\n-    image: '/images/sample-game.jpg',\r\n-    minBet: 0.01,\r\n-    maxBet: 100,\r\n-    description: 'A sample game for testing purposes',\r\n-  };\r\n-\r\n-  res.json({\r\n-    success: true,\r\n-    data: {\r\n-      game,\r\n-    },\r\n-  });\r\n-});\r\n-\r\n-// @desc    Place bet\r\n-// @route   POST /api/v1/game/bet\r\n-// @access  Private\r\n-router.post('/bet', validateGameBet, (req, res) => {\r\n-  // TODO: Implement bet logic\r\n-  const { gameId, amount } = req.body;\r\n-\r\n-  // Simulate game result\r\n-  const win = Math.random() > 0.6; // 40% win rate\r\n-  const winAmount = win ? amount * 2 : 0;\r\n-\r\n-  res.json({\r\n-    success: true,\r\n-    data: {\r\n-      result: {\r\n-        win,\r\n-        amount: winAmount,\r\n-        gameId,\r\n-        betAmount: amount,\r\n-      },\r\n-    },\r\n-  });\r\n-});\r\n-\r\n-// @desc    Get game history\r\n-// @route   GET /api/v1/game/history\r\n-// @access  Private\r\n-router.get('/history', (req, res) => {\r\n-  // TODO: Implement game history logic\r\n-  const history = [\r\n-    {\r\n-      id: '1',\r\n-      gameName: 'Slot Machine',\r\n-      betAmount: 10,\r\n-      winAmount: 20,\r\n-      date: new Date().toISOString(),\r\n-      win: true,\r\n-    },\r\n-    {\r\n-      id: '2',\r\n-      gameName: 'Blackjack',\r\n-      betAmount: 25,\r\n-      winAmount: 0,\r\n-      date: new Date().toISOString(),\r\n-      win: false,\r\n-    },\r\n-  ];\r\n-\r\n-  res.json({\r\n-    success: true,\r\n-    data: {\r\n-      history,\r\n-    },\r\n-  });\r\n-});\r\n-\r\n-export default router; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1752729117174,
            "name": "Commit-0",
            "content": "import express from 'express';\r\nimport { protect } from '../middleware/auth.js';\r\nimport { validateGameBet } from '../middleware/validation.js';\r\n\r\nconst router = express.Router();\r\n\r\n// All routes are protected\r\nrouter.use(protect);\r\n\r\n// @desc    Get all games\r\n// @route   GET /api/v1/game\r\n// @access  Private\r\nrouter.get('/', (req, res) => {\r\n  // TODO: Implement get games logic\r\n  const games = [\r\n    {\r\n      id: '1',\r\n      name: 'Slot Machine',\r\n      category: 'slots',\r\n      image: '/images/slot-machine.jpg',\r\n      minBet: 0.01,\r\n      maxBet: 100,\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Blackjack',\r\n      category: 'table',\r\n      image: '/images/blackjack.jpg',\r\n      minBet: 1,\r\n      maxBet: 500,\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Roulette',\r\n      category: 'table',\r\n      image: '/images/roulette.jpg',\r\n      minBet: 0.5,\r\n      maxBet: 1000,\r\n    },\r\n  ];\r\n\r\n  res.json({\r\n    success: true,\r\n    data: {\r\n      games,\r\n    },\r\n  });\r\n});\r\n\r\n// @desc    Get game by ID\r\n// @route   GET /api/v1/game/:id\r\n// @access  Private\r\nrouter.get('/:id', (req, res) => {\r\n  // TODO: Implement get game by ID logic\r\n  const game = {\r\n    id: req.params.id,\r\n    name: 'Sample Game',\r\n    category: 'slots',\r\n    image: '/images/sample-game.jpg',\r\n    minBet: 0.01,\r\n    maxBet: 100,\r\n    description: 'A sample game for testing purposes',\r\n  };\r\n\r\n  res.json({\r\n    success: true,\r\n    data: {\r\n      game,\r\n    },\r\n  });\r\n});\r\n\r\n// @desc    Place bet\r\n// @route   POST /api/v1/game/bet\r\n// @access  Private\r\nrouter.post('/bet', validateGameBet, (req, res) => {\r\n  // TODO: Implement bet logic\r\n  const { gameId, amount } = req.body;\r\n\r\n  // Simulate game result\r\n  const win = Math.random() > 0.6; // 40% win rate\r\n  const winAmount = win ? amount * 2 : 0;\r\n\r\n  res.json({\r\n    success: true,\r\n    data: {\r\n      result: {\r\n        win,\r\n        amount: winAmount,\r\n        gameId,\r\n        betAmount: amount,\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\n// @desc    Get game history\r\n// @route   GET /api/v1/game/history\r\n// @access  Private\r\nrouter.get('/history', (req, res) => {\r\n  // TODO: Implement game history logic\r\n  const history = [\r\n    {\r\n      id: '1',\r\n      gameName: 'Slot Machine',\r\n      betAmount: 10,\r\n      winAmount: 20,\r\n      date: new Date().toISOString(),\r\n      win: true,\r\n    },\r\n    {\r\n      id: '2',\r\n      gameName: 'Blackjack',\r\n      betAmount: 25,\r\n      winAmount: 0,\r\n      date: new Date().toISOString(),\r\n      win: false,\r\n    },\r\n  ];\r\n\r\n  res.json({\r\n    success: true,\r\n    data: {\r\n      history,\r\n    },\r\n  });\r\n});\r\n\r\nexport default router; "
        }
    ]
}