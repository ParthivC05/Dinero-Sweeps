{
    "sourceFile": "backend/routes/user.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752729093812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752746181301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,64 +1,1 @@\n-import express from 'express';\r\n-import { protect } from '../middleware/auth.js';\r\n-import { validateProfileUpdate, validatePasswordChange } from '../middleware/validation.js';\r\n-\r\n-const router = express.Router();\r\n-\r\n-// All routes are protected\r\n-router.use(protect);\r\n-\r\n-// @desc    Get current user profile\r\n-// @route   GET /api/v1/user/profile\r\n-// @access  Private\r\n-router.get('/profile', (req, res) => {\r\n-  res.json({\r\n-    success: true,\r\n-    data: {\r\n-      user: req.user,\r\n-    },\r\n-  });\r\n-});\r\n-\r\n-// @desc    Update user profile\r\n-// @route   PUT /api/v1/user/profile\r\n-// @access  Private\r\n-router.put('/profile', validateProfileUpdate, (req, res) => {\r\n-  // TODO: Implement profile update logic\r\n-  res.json({\r\n-    success: true,\r\n-    message: 'Profile updated successfully',\r\n-  });\r\n-});\r\n-\r\n-// @desc    Change password\r\n-// @route   PUT /api/v1/user/change-password\r\n-// @access  Private\r\n-router.put('/change-password', validatePasswordChange, (req, res) => {\r\n-  // TODO: Implement password change logic\r\n-  res.json({\r\n-    success: true,\r\n-    message: 'Password changed successfully',\r\n-  });\r\n-});\r\n-\r\n-// @desc    Get user statistics\r\n-// @route   GET /api/v1/user/stats\r\n-// @access  Private\r\n-router.get('/stats', (req, res) => {\r\n-  // TODO: Implement user statistics\r\n-  res.json({\r\n-    success: true,\r\n-    data: {\r\n-      stats: {\r\n-        gamesPlayed: req.user.gamesPlayed,\r\n-        totalWagered: req.user.totalWagered,\r\n-        totalWon: req.user.totalWon,\r\n-        totalLost: req.user.totalLost,\r\n-        level: req.user.level,\r\n-        experience: req.user.experience,\r\n-      },\r\n-    },\r\n-  });\r\n-});\r\n-\r\n-export default router; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1752729093812,
            "name": "Commit-0",
            "content": "import express from 'express';\r\nimport { protect } from '../middleware/auth.js';\r\nimport { validateProfileUpdate, validatePasswordChange } from '../middleware/validation.js';\r\n\r\nconst router = express.Router();\r\n\r\n// All routes are protected\r\nrouter.use(protect);\r\n\r\n// @desc    Get current user profile\r\n// @route   GET /api/v1/user/profile\r\n// @access  Private\r\nrouter.get('/profile', (req, res) => {\r\n  res.json({\r\n    success: true,\r\n    data: {\r\n      user: req.user,\r\n    },\r\n  });\r\n});\r\n\r\n// @desc    Update user profile\r\n// @route   PUT /api/v1/user/profile\r\n// @access  Private\r\nrouter.put('/profile', validateProfileUpdate, (req, res) => {\r\n  // TODO: Implement profile update logic\r\n  res.json({\r\n    success: true,\r\n    message: 'Profile updated successfully',\r\n  });\r\n});\r\n\r\n// @desc    Change password\r\n// @route   PUT /api/v1/user/change-password\r\n// @access  Private\r\nrouter.put('/change-password', validatePasswordChange, (req, res) => {\r\n  // TODO: Implement password change logic\r\n  res.json({\r\n    success: true,\r\n    message: 'Password changed successfully',\r\n  });\r\n});\r\n\r\n// @desc    Get user statistics\r\n// @route   GET /api/v1/user/stats\r\n// @access  Private\r\nrouter.get('/stats', (req, res) => {\r\n  // TODO: Implement user statistics\r\n  res.json({\r\n    success: true,\r\n    data: {\r\n      stats: {\r\n        gamesPlayed: req.user.gamesPlayed,\r\n        totalWagered: req.user.totalWagered,\r\n        totalWon: req.user.totalWon,\r\n        totalLost: req.user.totalLost,\r\n        level: req.user.level,\r\n        experience: req.user.experience,\r\n      },\r\n    },\r\n  });\r\n});\r\n\r\nexport default router; "
        }
    ]
}