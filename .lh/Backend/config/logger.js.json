{
    "sourceFile": "backend/config/logger.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752728865859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752746260030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,43 +1,1 @@\n-import winston from 'winston';\r\n-\r\n-const logFormat = winston.format.combine(\r\n-  winston.format.timestamp({\r\n-    format: 'YYYY-MM-DD HH:mm:ss'\r\n-  }),\r\n-  winston.format.errors({ stack: true }),\r\n-  winston.format.json()\r\n-);\r\n-\r\n-const logger = winston.createLogger({\r\n-  level: process.env.LOG_LEVEL || 'info',\r\n-  format: logFormat,\r\n-  defaultMeta: { service: 'dinero-sweeps-api' },\r\n-  transports: [\r\n-    // Write all logs with importance level of `error` or less to `error.log`\r\n-    new winston.transports.File({ \r\n-      filename: 'logs/error.log', \r\n-      level: 'error',\r\n-      maxsize: 5242880, // 5MB\r\n-      maxFiles: 5,\r\n-    }),\r\n-    // Write all logs with importance level of `info` or less to `combined.log`\r\n-    new winston.transports.File({ \r\n-      filename: 'logs/combined.log',\r\n-      maxsize: 5242880, // 5MB\r\n-      maxFiles: 5,\r\n-    }),\r\n-  ],\r\n-});\r\n-\r\n-// If we're not in production then log to the `console` with the format:\r\n-// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\r\n-if (process.env.NODE_ENV !== 'production') {\r\n-  logger.add(new winston.transports.Console({\r\n-    format: winston.format.combine(\r\n-      winston.format.colorize(),\r\n-      winston.format.simple()\r\n-    )\r\n-  }));\r\n-}\r\n-\r\n-export { logger }; \n\\ No newline at end of file\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1752728865859,
            "name": "Commit-0",
            "content": "import winston from 'winston';\r\n\r\nconst logFormat = winston.format.combine(\r\n  winston.format.timestamp({\r\n    format: 'YYYY-MM-DD HH:mm:ss'\r\n  }),\r\n  winston.format.errors({ stack: true }),\r\n  winston.format.json()\r\n);\r\n\r\nconst logger = winston.createLogger({\r\n  level: process.env.LOG_LEVEL || 'info',\r\n  format: logFormat,\r\n  defaultMeta: { service: 'dinero-sweeps-api' },\r\n  transports: [\r\n    // Write all logs with importance level of `error` or less to `error.log`\r\n    new winston.transports.File({ \r\n      filename: 'logs/error.log', \r\n      level: 'error',\r\n      maxsize: 5242880, // 5MB\r\n      maxFiles: 5,\r\n    }),\r\n    // Write all logs with importance level of `info` or less to `combined.log`\r\n    new winston.transports.File({ \r\n      filename: 'logs/combined.log',\r\n      maxsize: 5242880, // 5MB\r\n      maxFiles: 5,\r\n    }),\r\n  ],\r\n});\r\n\r\n// If we're not in production then log to the `console` with the format:\r\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\r\nif (process.env.NODE_ENV !== 'production') {\r\n  logger.add(new winston.transports.Console({\r\n    format: winston.format.combine(\r\n      winston.format.colorize(),\r\n      winston.format.simple()\r\n    )\r\n  }));\r\n}\r\n\r\nexport { logger }; "
        }
    ]
}