{
    "sourceFile": "backend/services/provider.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1752838746197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752839420998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,37 @@\n // backend/services/provider.js\r\n+import axios from 'axios';\r\n+import config from '../config/provider.config'; // Example config import\r\n \r\n const provider = {\r\n-    async createDemoSession({ game }) {\r\n-      // If you have a static demo URL in your DB, just return it:\r\n-      if (game.more_details?.demo_url) return game.more_details.demo_url;\r\n-  \r\n-      // Otherwise, call the provider's API to get a demo session URL:\r\n-      // const response = await axios.post('https://provider.com/api/demo', { gameId: game.casino_game_id });\r\n+  async createDemoSession({ game }) {\r\n+    if (game.more_details?.demo_url) return game.more_details.demo_url;\r\n+\r\n+    try {\r\n+      // Example: Call provider's demo session API\r\n+      // const response = await axios.post(`${config.baseUrl}/api/demo`, { gameId: game.casino_game_id });\r\n       // return response.data.url;\r\n-  \r\n+\r\n       // Placeholder:\r\n       return `https://provider.com/demo/${game.casino_game_id}`;\r\n-    },\r\n-  \r\n-    async createRealSession({ userId, game }) {\r\n-      // Call the provider's API to create a real session for this user and game.\r\n-      // You may need to pass user info, game ID, and maybe a token.\r\n-      // Example:\r\n\\ No newline at end of file\n-      // const response = await axios.post('https://provider.com/api/real', { userId, gameId: game.casino_game_id });\r\n+    } catch (error) {\r\n+      // Handle error (log, throw, etc.)\r\n+      throw new Error('Failed to create demo session');\r\n+    }\r\n+  },\r\n+\r\n+  async createRealSession({ userId, game }) {\r\n+    try {\r\n+      // Example: Call provider's real session API\r\n+      // const response = await axios.post(`${config.baseUrl}/api/real`, { userId, gameId: game.casino_game_id });\r\n       // return response.data.url;\r\n-  \r\n+\r\n       // Placeholder:\r\n       return `https://provider.com/real/${game.casino_game_id}?user=${userId}`;\r\n+    } catch (error) {\r\n+      // Handle error (log, throw, etc.)\r\n+      throw new Error('Failed to create real session');\r\n     }\r\n-  };\r\n-  \r\n-  export default provider;\n+  }\r\n+};\r\n+\r\n+export default provider;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752842561225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n-// backend/services/provider.js\r\n import axios from 'axios';\r\n-import config from '../config/provider.config'; // Example config import\r\n+import config from '../config/provider.config'; \r\n \r\n const provider = {\r\n   async createDemoSession({ game }) {\r\n     if (game.more_details?.demo_url) return game.more_details.demo_url;\r\n"
                },
                {
                    "date": 1752842567054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,30 +5,24 @@\n   async createDemoSession({ game }) {\r\n     if (game.more_details?.demo_url) return game.more_details.demo_url;\r\n \r\n     try {\r\n-      // Example: Call provider's demo session API\r\n-      // const response = await axios.post(`${config.baseUrl}/api/demo`, { gameId: game.casino_game_id });\r\n-      // return response.data.url;\r\n+      const response = await axios.post(`${config.baseUrl}/api/demo`, { gameId: game.casino_game_id });\r\n+      return response.data.url;\r\n \r\n-      // Placeholder:\r\n       return `https://provider.com/demo/${game.casino_game_id}`;\r\n     } catch (error) {\r\n-      // Handle error (log, throw, etc.)\r\n       throw new Error('Failed to create demo session');\r\n     }\r\n   },\r\n \r\n   async createRealSession({ userId, game }) {\r\n     try {\r\n-      // Example: Call provider's real session API\r\n-      // const response = await axios.post(`${config.baseUrl}/api/real`, { userId, gameId: game.casino_game_id });\r\n-      // return response.data.url;\r\n+      const response = await axios.post(`${config.baseUrl}/api/real`, { userId, gameId: game.casino_game_id });\r\n+      return response.data.url;\r\n \r\n-      // Placeholder:\r\n       return `https://provider.com/real/${game.casino_game_id}?user=${userId}`;\r\n     } catch (error) {\r\n-      // Handle error (log, throw, etc.)\r\n       throw new Error('Failed to create real session');\r\n     }\r\n   }\r\n };\r\n"
                }
            ],
            "date": 1752838746197,
            "name": "Commit-0",
            "content": "// backend/services/provider.js\r\n\r\nconst provider = {\r\n    async createDemoSession({ game }) {\r\n      // If you have a static demo URL in your DB, just return it:\r\n      if (game.more_details?.demo_url) return game.more_details.demo_url;\r\n  \r\n      // Otherwise, call the provider's API to get a demo session URL:\r\n      // const response = await axios.post('https://provider.com/api/demo', { gameId: game.casino_game_id });\r\n      // return response.data.url;\r\n  \r\n      // Placeholder:\r\n      return `https://provider.com/demo/${game.casino_game_id}`;\r\n    },\r\n  \r\n    async createRealSession({ userId, game }) {\r\n      // Call the provider's API to create a real session for this user and game.\r\n      // You may need to pass user info, game ID, and maybe a token.\r\n      // Example:\r\n      // const response = await axios.post('https://provider.com/api/real', { userId, gameId: game.casino_game_id });\r\n      // return response.data.url;\r\n  \r\n      // Placeholder:\r\n      return `https://provider.com/real/${game.casino_game_id}?user=${userId}`;\r\n    }\r\n  };\r\n  \r\n  export default provider;"
        }
    ]
}